2023-07-06 12:49:12,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 12:49:12,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 12:49:12,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 12:49:12,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:29:44,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:29:44,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:29:44,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:29:44,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:40:42,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:40:42,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:40:42,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:40:42,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:19,582:INFO:PyCaret ClassificationExperiment
2023-07-06 23:41:19,582:INFO:Logging name: Diabaties_detection_01
2023-07-06 23:41:19,582:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-06 23:41:19,582:INFO:version 3.0.4
2023-07-06 23:41:19,582:INFO:Initializing setup()
2023-07-06 23:41:19,582:INFO:self.USI: 6fbf
2023-07-06 23:41:19,582:INFO:self._variable_keys: {'pipeline', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'fold_generator', 'gpu_param', 'y_test', 'y_train', 'X_test', 'is_multiclass', 'y', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'X_train', 'n_jobs_param', 'USI', 'exp_id', 'seed', 'log_plots_param', 'html_param', 'idx', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'data', 'X'}
2023-07-06 23:41:19,583:INFO:Checking environment
2023-07-06 23:41:19,583:INFO:python_version: 3.9.1
2023-07-06 23:41:19,583:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-06 23:41:19,583:INFO:machine: x86_64
2023-07-06 23:41:19,599:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:41:19,599:INFO:Memory: svmem(total=8260853760, available=5349302272, percent=35.2, used=2603274240, free=4587139072, active=2726486016, inactive=566394880, buffers=125833216, cached=944607232, shared=69632, slab=232026112)
2023-07-06 23:41:19,601:INFO:Physical Core: 6
2023-07-06 23:41:19,601:INFO:Logical Core: 12
2023-07-06 23:41:19,601:INFO:Checking libraries
2023-07-06 23:41:19,601:INFO:System:
2023-07-06 23:41:19,601:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-06 23:41:19,601:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-06 23:41:19,601:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:41:19,601:INFO:PyCaret required dependencies:
2023-07-06 23:41:19,605:INFO:                 pip: 20.3.1
2023-07-06 23:41:19,605:INFO:          setuptools: 51.0.0.post20201207
2023-07-06 23:41:19,605:INFO:             pycaret: 3.0.4
2023-07-06 23:41:19,605:INFO:             IPython: 7.22.0
2023-07-06 23:41:19,605:INFO:          ipywidgets: 8.0.7
2023-07-06 23:41:19,605:INFO:                tqdm: 4.65.0
2023-07-06 23:41:19,605:INFO:               numpy: 1.22.4
2023-07-06 23:41:19,605:INFO:              pandas: 1.5.3
2023-07-06 23:41:19,605:INFO:              jinja2: 3.0.1
2023-07-06 23:41:19,605:INFO:               scipy: 1.7.1
2023-07-06 23:41:19,605:INFO:              joblib: 1.3.1
2023-07-06 23:41:19,605:INFO:             sklearn: 1.2.2
2023-07-06 23:41:19,605:INFO:                pyod: 1.1.0
2023-07-06 23:41:19,606:INFO:            imblearn: 0.10.1
2023-07-06 23:41:19,606:INFO:   category_encoders: 2.6.1
2023-07-06 23:41:19,606:INFO:            lightgbm: 3.3.5
2023-07-06 23:41:19,606:INFO:               numba: 0.57.1
2023-07-06 23:41:19,606:INFO:            requests: 2.31.0
2023-07-06 23:41:19,606:INFO:          matplotlib: 3.4.3
2023-07-06 23:41:19,606:INFO:          scikitplot: 0.3.7
2023-07-06 23:41:19,606:INFO:         yellowbrick: 1.5
2023-07-06 23:41:19,606:INFO:              plotly: 5.15.0
2023-07-06 23:41:19,606:INFO:    plotly-resampler: Not installed
2023-07-06 23:41:19,606:INFO:             kaleido: 0.2.1
2023-07-06 23:41:19,606:INFO:           schemdraw: 0.15
2023-07-06 23:41:19,606:INFO:         statsmodels: 0.14.0
2023-07-06 23:41:19,606:INFO:              sktime: 0.20.0
2023-07-06 23:41:19,606:INFO:               tbats: 1.1.3
2023-07-06 23:41:19,606:INFO:            pmdarima: 2.0.3
2023-07-06 23:41:19,606:INFO:              psutil: 5.9.5
2023-07-06 23:41:19,606:INFO:          markupsafe: 2.0.1
2023-07-06 23:41:19,606:INFO:             pickle5: Not installed
2023-07-06 23:41:19,606:INFO:         cloudpickle: 2.2.1
2023-07-06 23:41:19,607:INFO:         deprecation: 2.1.0
2023-07-06 23:41:19,607:INFO:              xxhash: 3.2.0
2023-07-06 23:41:19,607:INFO:           wurlitzer: 3.0.3
2023-07-06 23:41:19,607:INFO:PyCaret optional dependencies:
2023-07-06 23:41:19,645:INFO:                shap: Not installed
2023-07-06 23:41:19,645:INFO:           interpret: Not installed
2023-07-06 23:41:19,645:INFO:                umap: Not installed
2023-07-06 23:41:19,645:INFO:    pandas_profiling: 3.6.6
2023-07-06 23:41:19,645:INFO:  explainerdashboard: Not installed
2023-07-06 23:41:19,645:INFO:             autoviz: Not installed
2023-07-06 23:41:19,645:INFO:           fairlearn: Not installed
2023-07-06 23:41:19,645:INFO:          deepchecks: Not installed
2023-07-06 23:41:19,645:INFO:             xgboost: Not installed
2023-07-06 23:41:19,645:INFO:            catboost: Not installed
2023-07-06 23:41:19,645:INFO:              kmodes: Not installed
2023-07-06 23:41:19,645:INFO:             mlxtend: Not installed
2023-07-06 23:41:19,645:INFO:       statsforecast: Not installed
2023-07-06 23:41:19,645:INFO:        tune_sklearn: Not installed
2023-07-06 23:41:19,645:INFO:                 ray: Not installed
2023-07-06 23:41:19,645:INFO:            hyperopt: Not installed
2023-07-06 23:41:19,645:INFO:              optuna: Not installed
2023-07-06 23:41:19,645:INFO:               skopt: Not installed
2023-07-06 23:41:19,645:INFO:              mlflow: 2.4.1
2023-07-06 23:41:19,645:INFO:              gradio: Not installed
2023-07-06 23:41:19,645:INFO:             fastapi: Not installed
2023-07-06 23:41:19,645:INFO:             uvicorn: Not installed
2023-07-06 23:41:19,645:INFO:              m2cgen: Not installed
2023-07-06 23:41:19,645:INFO:           evidently: Not installed
2023-07-06 23:41:19,645:INFO:               fugue: Not installed
2023-07-06 23:41:19,645:INFO:           streamlit: Not installed
2023-07-06 23:41:19,645:INFO:             prophet: Not installed
2023-07-06 23:41:19,645:INFO:None
2023-07-06 23:41:19,645:INFO:Set up GPU usage.
2023-07-06 23:41:19,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:19,645:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-06 23:41:19,646:INFO:Set up data.
2023-07-06 23:41:20,558:INFO:Set up train/test split.
2023-07-06 23:41:20,995:INFO:Set up index.
2023-07-06 23:41:20,998:INFO:Set up folding strategy.
2023-07-06 23:41:20,998:INFO:Assigning column types.
2023-07-06 23:41:21,046:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 23:41:21,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:41:21,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:41:21,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:41:21,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:41:21,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,890:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 23:41:21,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:41:21,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:21,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:21,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:41:22,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,095:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-06 23:41:22,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,313:INFO:Preparing preprocessing pipeline...
2023-07-06 23:41:22,321:INFO:Set up simple imputation.
2023-07-06 23:41:22,321:INFO:Set up imbalanced handling.
2023-07-06 23:41:22,321:INFO:Set up feature normalization.
2023-07-06 23:41:22,322:INFO:Set up feature selection.
2023-07-06 23:41:22,322:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:22,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:22,449:INFO:Set up column name cleaning.
2023-07-06 23:41:33,437:INFO:Finished creating preprocessing pipeline.
2023-07-06 23:41:33,451:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:41:33,451:INFO:Creating final display dataframe.
2023-07-06 23:41:34,883:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (198929, 34)
4        Transformed data shape             (290997, 6)
5   Transformed train set shape             (231318, 6)
6    Transformed test set shape              (59679, 6)
7               Ignore features                       7
8              Numeric features                       1
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                Fix imbalance                    True
14         Fix imbalance method                   SMOTE
15                    Normalize                    True
16             Normalize method                  zscore
17            Feature selection                    True
18     Feature selection method                 classic
19  Feature selection estimator                lightgbm
20  Number of features selected                     0.2
21               Fold Generator         StratifiedKFold
22                  Fold Number                      10
23                     CPU Jobs                      -1
24                      Use GPU                    True
25               Log Experiment            MlflowLogger
26              Experiment Name  Diabaties_detection_01
27                          USI                    6fbf
2023-07-06 23:41:34,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:34,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:34,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:34,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:35,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:35,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:41:35,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:35,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:41:35,162:INFO:Logging experiment in loggers
2023-07-06 23:41:35,566:INFO:SubProcess save_model() called ==================================
2023-07-06 23:41:35,615:INFO:Initializing save_model()
2023-07-06 23:41:35,615:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmptu2qbbrn/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-06 23:41:35,615:INFO:Adding model into prep_pipe
2023-07-06 23:41:35,615:WARNING:Only Model saved as it was a pipeline.
2023-07-06 23:41:35,634:INFO:/tmp/tmptu2qbbrn/Transformation Pipeline.pkl saved in current working directory
2023-07-06 23:41:35,651:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:41:35,651:INFO:save_model() successfully completed......................................
2023-07-06 23:41:35,739:INFO:SubProcess save_model() end ==================================
2023-07-06 23:47:20,980:INFO:PyCaret ClassificationExperiment
2023-07-06 23:47:20,980:INFO:Logging name: Diabaties_detection_01
2023-07-06 23:47:20,980:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-06 23:47:20,980:INFO:version 3.0.4
2023-07-06 23:47:20,980:INFO:Initializing setup()
2023-07-06 23:47:20,980:INFO:self.USI: 1cf6
2023-07-06 23:47:20,980:INFO:self._variable_keys: {'pipeline', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'fold_generator', 'gpu_param', 'y_test', 'y_train', 'X_test', 'is_multiclass', 'y', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'X_train', 'n_jobs_param', 'USI', 'exp_id', 'seed', 'log_plots_param', 'html_param', 'idx', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'data', 'X'}
2023-07-06 23:47:20,980:INFO:Checking environment
2023-07-06 23:47:20,980:INFO:python_version: 3.9.1
2023-07-06 23:47:20,980:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-06 23:47:20,980:INFO:machine: x86_64
2023-07-06 23:47:20,980:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:47:20,980:INFO:Memory: svmem(total=8260853760, available=5108592640, percent=38.2, used=2843987968, free=4257091584, active=2968649728, inactive=650686464, buffers=126742528, cached=1033031680, shared=69632, slab=234561536)
2023-07-06 23:47:20,981:INFO:Physical Core: 6
2023-07-06 23:47:20,981:INFO:Logical Core: 12
2023-07-06 23:47:20,981:INFO:Checking libraries
2023-07-06 23:47:20,981:INFO:System:
2023-07-06 23:47:20,981:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-06 23:47:20,981:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-06 23:47:20,981:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:47:20,981:INFO:PyCaret required dependencies:
2023-07-06 23:47:20,981:INFO:                 pip: 20.3.1
2023-07-06 23:47:20,981:INFO:          setuptools: 51.0.0.post20201207
2023-07-06 23:47:20,981:INFO:             pycaret: 3.0.4
2023-07-06 23:47:20,981:INFO:             IPython: 7.22.0
2023-07-06 23:47:20,981:INFO:          ipywidgets: 8.0.7
2023-07-06 23:47:20,981:INFO:                tqdm: 4.65.0
2023-07-06 23:47:20,982:INFO:               numpy: 1.22.4
2023-07-06 23:47:20,982:INFO:              pandas: 1.5.3
2023-07-06 23:47:20,982:INFO:              jinja2: 3.0.1
2023-07-06 23:47:20,982:INFO:               scipy: 1.7.1
2023-07-06 23:47:20,982:INFO:              joblib: 1.3.1
2023-07-06 23:47:20,982:INFO:             sklearn: 1.2.2
2023-07-06 23:47:20,982:INFO:                pyod: 1.1.0
2023-07-06 23:47:20,982:INFO:            imblearn: 0.10.1
2023-07-06 23:47:20,982:INFO:   category_encoders: 2.6.1
2023-07-06 23:47:20,982:INFO:            lightgbm: 3.3.5
2023-07-06 23:47:20,982:INFO:               numba: 0.57.1
2023-07-06 23:47:20,982:INFO:            requests: 2.31.0
2023-07-06 23:47:20,982:INFO:          matplotlib: 3.4.3
2023-07-06 23:47:20,982:INFO:          scikitplot: 0.3.7
2023-07-06 23:47:20,982:INFO:         yellowbrick: 1.5
2023-07-06 23:47:20,982:INFO:              plotly: 5.15.0
2023-07-06 23:47:20,982:INFO:    plotly-resampler: Not installed
2023-07-06 23:47:20,982:INFO:             kaleido: 0.2.1
2023-07-06 23:47:20,982:INFO:           schemdraw: 0.15
2023-07-06 23:47:20,983:INFO:         statsmodels: 0.14.0
2023-07-06 23:47:20,983:INFO:              sktime: 0.20.0
2023-07-06 23:47:20,983:INFO:               tbats: 1.1.3
2023-07-06 23:47:20,983:INFO:            pmdarima: 2.0.3
2023-07-06 23:47:20,983:INFO:              psutil: 5.9.5
2023-07-06 23:47:20,983:INFO:          markupsafe: 2.0.1
2023-07-06 23:47:20,983:INFO:             pickle5: Not installed
2023-07-06 23:47:20,983:INFO:         cloudpickle: 2.2.1
2023-07-06 23:47:20,983:INFO:         deprecation: 2.1.0
2023-07-06 23:47:20,983:INFO:              xxhash: 3.2.0
2023-07-06 23:47:20,983:INFO:           wurlitzer: 3.0.3
2023-07-06 23:47:20,983:INFO:PyCaret optional dependencies:
2023-07-06 23:47:20,983:INFO:                shap: Not installed
2023-07-06 23:47:20,983:INFO:           interpret: Not installed
2023-07-06 23:47:20,983:INFO:                umap: Not installed
2023-07-06 23:47:20,983:INFO:    pandas_profiling: 3.6.6
2023-07-06 23:47:20,983:INFO:  explainerdashboard: Not installed
2023-07-06 23:47:20,984:INFO:             autoviz: Not installed
2023-07-06 23:47:20,984:INFO:           fairlearn: Not installed
2023-07-06 23:47:20,984:INFO:          deepchecks: Not installed
2023-07-06 23:47:20,984:INFO:             xgboost: Not installed
2023-07-06 23:47:20,984:INFO:            catboost: Not installed
2023-07-06 23:47:20,984:INFO:              kmodes: Not installed
2023-07-06 23:47:20,984:INFO:             mlxtend: Not installed
2023-07-06 23:47:20,984:INFO:       statsforecast: Not installed
2023-07-06 23:47:20,984:INFO:        tune_sklearn: Not installed
2023-07-06 23:47:20,984:INFO:                 ray: Not installed
2023-07-06 23:47:20,984:INFO:            hyperopt: Not installed
2023-07-06 23:47:20,984:INFO:              optuna: Not installed
2023-07-06 23:47:20,984:INFO:               skopt: Not installed
2023-07-06 23:47:20,984:INFO:              mlflow: 2.4.1
2023-07-06 23:47:20,984:INFO:              gradio: Not installed
2023-07-06 23:47:20,984:INFO:             fastapi: Not installed
2023-07-06 23:47:20,984:INFO:             uvicorn: Not installed
2023-07-06 23:47:20,984:INFO:              m2cgen: Not installed
2023-07-06 23:47:20,984:INFO:           evidently: Not installed
2023-07-06 23:47:20,985:INFO:               fugue: Not installed
2023-07-06 23:47:20,985:INFO:           streamlit: Not installed
2023-07-06 23:47:20,985:INFO:             prophet: Not installed
2023-07-06 23:47:20,985:INFO:None
2023-07-06 23:47:20,985:INFO:Set up GPU usage.
2023-07-06 23:47:20,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:20,985:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-06 23:47:20,985:INFO:Set up data.
2023-07-06 23:47:21,950:INFO:Set up train/test split.
2023-07-06 23:47:22,313:INFO:Set up index.
2023-07-06 23:47:22,318:INFO:Set up folding strategy.
2023-07-06 23:47:22,318:INFO:Assigning column types.
2023-07-06 23:47:22,383:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 23:47:22,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,473:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,715:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 23:47:22,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,765:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,798:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:22,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,865:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-06 23:47:22,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:22,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:22,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:23,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:23,042:INFO:Preparing preprocessing pipeline...
2023-07-06 23:47:23,048:INFO:Set up simple imputation.
2023-07-06 23:47:23,048:INFO:Set up imbalanced handling.
2023-07-06 23:47:23,049:INFO:Set up feature normalization.
2023-07-06 23:47:23,049:INFO:Set up feature selection.
2023-07-06 23:47:23,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:23,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:23,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:23,210:INFO:Set up column name cleaning.
2023-07-06 23:47:23,449:INFO:Finished creating preprocessing pipeline.
2023-07-06 23:47:23,462:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:47:23,462:INFO:Creating final display dataframe.
2023-07-06 23:47:24,022:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (198929, 34)
4        Transformed data shape             (290997, 6)
5   Transformed train set shape             (231318, 6)
6    Transformed test set shape              (59679, 6)
7               Ignore features                       7
8              Numeric features                       1
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                Fix imbalance                    True
14         Fix imbalance method                   SMOTE
15                    Normalize                    True
16             Normalize method                  zscore
17            Feature selection                    True
18     Feature selection method                 classic
19  Feature selection estimator                lightgbm
20  Number of features selected                     0.2
21               Fold Generator         StratifiedKFold
22                  Fold Number                      10
23                     CPU Jobs                      -1
24                      Use GPU                    True
25               Log Experiment            MlflowLogger
26              Experiment Name  Diabaties_detection_01
27                          USI                    1cf6
2023-07-06 23:47:24,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:24,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:24,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:24,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:24,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:24,237:INFO:Logging experiment in loggers
2023-07-06 23:47:24,256:INFO:SubProcess save_model() called ==================================
2023-07-06 23:47:24,291:INFO:Initializing save_model()
2023-07-06 23:47:24,291:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmpv8fyso7b/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-06 23:47:24,291:INFO:Adding model into prep_pipe
2023-07-06 23:47:24,291:WARNING:Only Model saved as it was a pipeline.
2023-07-06 23:47:24,301:INFO:/tmp/tmpv8fyso7b/Transformation Pipeline.pkl saved in current working directory
2023-07-06 23:47:24,313:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:47:24,314:INFO:save_model() successfully completed......................................
2023-07-06 23:47:24,384:INFO:SubProcess save_model() end ==================================
2023-07-06 23:47:55,702:INFO:PyCaret ClassificationExperiment
2023-07-06 23:47:55,703:INFO:Logging name: Diabaties_detection_01
2023-07-06 23:47:55,703:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-06 23:47:55,703:INFO:version 3.0.4
2023-07-06 23:47:55,703:INFO:Initializing setup()
2023-07-06 23:47:55,704:INFO:self.USI: f370
2023-07-06 23:47:55,704:INFO:self._variable_keys: {'pipeline', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'fold_generator', 'gpu_param', 'y_test', 'y_train', 'X_test', 'is_multiclass', 'y', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'X_train', 'n_jobs_param', 'USI', 'exp_id', 'seed', 'log_plots_param', 'html_param', 'idx', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'data', 'X'}
2023-07-06 23:47:55,704:INFO:Checking environment
2023-07-06 23:47:55,704:INFO:python_version: 3.9.1
2023-07-06 23:47:55,704:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-06 23:47:55,704:INFO:machine: x86_64
2023-07-06 23:47:55,704:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:47:55,704:INFO:Memory: svmem(total=8260853760, available=5053624320, percent=38.8, used=2898956288, free=4190896128, active=3068616704, inactive=617414656, buffers=126881792, cached=1044119552, shared=69632, slab=234893312)
2023-07-06 23:47:55,705:INFO:Physical Core: 6
2023-07-06 23:47:55,705:INFO:Logical Core: 12
2023-07-06 23:47:55,705:INFO:Checking libraries
2023-07-06 23:47:55,705:INFO:System:
2023-07-06 23:47:55,705:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-06 23:47:55,705:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-06 23:47:55,705:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:47:55,705:INFO:PyCaret required dependencies:
2023-07-06 23:47:55,706:INFO:                 pip: 20.3.1
2023-07-06 23:47:55,706:INFO:          setuptools: 51.0.0.post20201207
2023-07-06 23:47:55,706:INFO:             pycaret: 3.0.4
2023-07-06 23:47:55,706:INFO:             IPython: 7.22.0
2023-07-06 23:47:55,706:INFO:          ipywidgets: 8.0.7
2023-07-06 23:47:55,706:INFO:                tqdm: 4.65.0
2023-07-06 23:47:55,706:INFO:               numpy: 1.22.4
2023-07-06 23:47:55,706:INFO:              pandas: 1.5.3
2023-07-06 23:47:55,706:INFO:              jinja2: 3.0.1
2023-07-06 23:47:55,706:INFO:               scipy: 1.7.1
2023-07-06 23:47:55,706:INFO:              joblib: 1.3.1
2023-07-06 23:47:55,706:INFO:             sklearn: 1.2.2
2023-07-06 23:47:55,706:INFO:                pyod: 1.1.0
2023-07-06 23:47:55,706:INFO:            imblearn: 0.10.1
2023-07-06 23:47:55,706:INFO:   category_encoders: 2.6.1
2023-07-06 23:47:55,706:INFO:            lightgbm: 3.3.5
2023-07-06 23:47:55,706:INFO:               numba: 0.57.1
2023-07-06 23:47:55,706:INFO:            requests: 2.31.0
2023-07-06 23:47:55,706:INFO:          matplotlib: 3.4.3
2023-07-06 23:47:55,706:INFO:          scikitplot: 0.3.7
2023-07-06 23:47:55,706:INFO:         yellowbrick: 1.5
2023-07-06 23:47:55,706:INFO:              plotly: 5.15.0
2023-07-06 23:47:55,706:INFO:    plotly-resampler: Not installed
2023-07-06 23:47:55,706:INFO:             kaleido: 0.2.1
2023-07-06 23:47:55,707:INFO:           schemdraw: 0.15
2023-07-06 23:47:55,707:INFO:         statsmodels: 0.14.0
2023-07-06 23:47:55,707:INFO:              sktime: 0.20.0
2023-07-06 23:47:55,707:INFO:               tbats: 1.1.3
2023-07-06 23:47:55,707:INFO:            pmdarima: 2.0.3
2023-07-06 23:47:55,707:INFO:              psutil: 5.9.5
2023-07-06 23:47:55,707:INFO:          markupsafe: 2.0.1
2023-07-06 23:47:55,707:INFO:             pickle5: Not installed
2023-07-06 23:47:55,707:INFO:         cloudpickle: 2.2.1
2023-07-06 23:47:55,707:INFO:         deprecation: 2.1.0
2023-07-06 23:47:55,707:INFO:              xxhash: 3.2.0
2023-07-06 23:47:55,707:INFO:           wurlitzer: 3.0.3
2023-07-06 23:47:55,707:INFO:PyCaret optional dependencies:
2023-07-06 23:47:55,707:INFO:                shap: Not installed
2023-07-06 23:47:55,707:INFO:           interpret: Not installed
2023-07-06 23:47:55,707:INFO:                umap: Not installed
2023-07-06 23:47:55,707:INFO:    pandas_profiling: 3.6.6
2023-07-06 23:47:55,707:INFO:  explainerdashboard: Not installed
2023-07-06 23:47:55,707:INFO:             autoviz: Not installed
2023-07-06 23:47:55,707:INFO:           fairlearn: Not installed
2023-07-06 23:47:55,707:INFO:          deepchecks: Not installed
2023-07-06 23:47:55,707:INFO:             xgboost: Not installed
2023-07-06 23:47:55,707:INFO:            catboost: Not installed
2023-07-06 23:47:55,707:INFO:              kmodes: Not installed
2023-07-06 23:47:55,707:INFO:             mlxtend: Not installed
2023-07-06 23:47:55,707:INFO:       statsforecast: Not installed
2023-07-06 23:47:55,708:INFO:        tune_sklearn: Not installed
2023-07-06 23:47:55,708:INFO:                 ray: Not installed
2023-07-06 23:47:55,708:INFO:            hyperopt: Not installed
2023-07-06 23:47:55,708:INFO:              optuna: Not installed
2023-07-06 23:47:55,708:INFO:               skopt: Not installed
2023-07-06 23:47:55,708:INFO:              mlflow: 2.4.1
2023-07-06 23:47:55,708:INFO:              gradio: Not installed
2023-07-06 23:47:55,708:INFO:             fastapi: Not installed
2023-07-06 23:47:55,708:INFO:             uvicorn: Not installed
2023-07-06 23:47:55,708:INFO:              m2cgen: Not installed
2023-07-06 23:47:55,708:INFO:           evidently: Not installed
2023-07-06 23:47:55,708:INFO:               fugue: Not installed
2023-07-06 23:47:55,708:INFO:           streamlit: Not installed
2023-07-06 23:47:55,708:INFO:             prophet: Not installed
2023-07-06 23:47:55,708:INFO:None
2023-07-06 23:47:55,708:INFO:Set up GPU usage.
2023-07-06 23:47:55,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:55,708:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-06 23:47:55,708:INFO:Set up data.
2023-07-06 23:47:56,601:INFO:Set up train/test split.
2023-07-06 23:47:56,857:INFO:Set up index.
2023-07-06 23:47:56,862:INFO:Set up folding strategy.
2023-07-06 23:47:56,862:INFO:Assigning column types.
2023-07-06 23:47:56,912:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 23:47:56,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:56,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:47:56,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:56,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:56,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:56,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,188:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:47:57,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:57,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,254:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 23:47:57,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:57,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:47:57,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,451:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-06 23:47:57,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,595:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,595:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,650:INFO:Preparing preprocessing pipeline...
2023-07-06 23:47:57,658:INFO:Set up simple imputation.
2023-07-06 23:47:57,658:INFO:Set up imbalanced handling.
2023-07-06 23:47:57,658:INFO:Set up feature normalization.
2023-07-06 23:47:57,658:INFO:Set up feature selection.
2023-07-06 23:47:57,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:57,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:57,767:INFO:Set up column name cleaning.
2023-07-06 23:47:58,015:INFO:Finished creating preprocessing pipeline.
2023-07-06 23:47:58,029:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:47:58,029:INFO:Creating final display dataframe.
2023-07-06 23:47:58,330:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (198929, 34)
4        Transformed data shape             (290997, 6)
5   Transformed train set shape             (231318, 6)
6    Transformed test set shape              (59679, 6)
7               Ignore features                       7
8              Numeric features                       1
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                Fix imbalance                    True
14         Fix imbalance method                   SMOTE
15                    Normalize                    True
16             Normalize method                  zscore
17            Feature selection                    True
18     Feature selection method                 classic
19  Feature selection estimator                lightgbm
20  Number of features selected                     0.2
21               Fold Generator         StratifiedKFold
22                  Fold Number                      10
23                     CPU Jobs                      -1
24                      Use GPU                    True
25               Log Experiment            MlflowLogger
26              Experiment Name  Diabaties_detection_01
27                          USI                    f370
2023-07-06 23:47:58,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:58,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:58,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 23:47:58,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:58,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:47:58,511:INFO:Logging experiment in loggers
2023-07-06 23:47:58,529:INFO:SubProcess save_model() called ==================================
2023-07-06 23:47:58,556:INFO:Initializing save_model()
2023-07-06 23:47:58,556:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmppq7xi6sh/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-06 23:47:58,556:INFO:Adding model into prep_pipe
2023-07-06 23:47:58,556:WARNING:Only Model saved as it was a pipeline.
2023-07-06 23:47:58,568:INFO:/tmp/tmppq7xi6sh/Transformation Pipeline.pkl saved in current working directory
2023-07-06 23:47:58,584:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    tr...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:47:58,584:INFO:save_model() successfully completed......................................
2023-07-06 23:47:58,674:INFO:SubProcess save_model() end ==================================
2023-07-06 23:49:38,345:INFO:PyCaret ClassificationExperiment
2023-07-06 23:49:38,346:INFO:Logging name: clf-default-name
2023-07-06 23:49:38,346:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-06 23:49:38,346:INFO:version 3.0.4
2023-07-06 23:49:38,346:INFO:Initializing setup()
2023-07-06 23:49:38,346:INFO:self.USI: 1ff9
2023-07-06 23:49:38,346:INFO:self._variable_keys: {'pipeline', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'fold_generator', 'gpu_param', 'y_test', 'y_train', 'X_test', 'is_multiclass', 'y', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'X_train', 'n_jobs_param', 'USI', 'exp_id', 'seed', 'log_plots_param', 'html_param', 'idx', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'data', 'X'}
2023-07-06 23:49:38,346:INFO:Checking environment
2023-07-06 23:49:38,346:INFO:python_version: 3.9.1
2023-07-06 23:49:38,346:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-06 23:49:38,346:INFO:machine: x86_64
2023-07-06 23:49:38,346:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:49:38,347:INFO:Memory: svmem(total=8260853760, available=4818432000, percent=41.7, used=3134144512, free=3954790400, active=3314073600, inactive=607428608, buffers=127123456, cached=1044795392, shared=69632, slab=235020288)
2023-07-06 23:49:38,348:INFO:Physical Core: 6
2023-07-06 23:49:38,348:INFO:Logical Core: 12
2023-07-06 23:49:38,349:INFO:Checking libraries
2023-07-06 23:49:38,349:INFO:System:
2023-07-06 23:49:38,349:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-06 23:49:38,349:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-06 23:49:38,349:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-06 23:49:38,349:INFO:PyCaret required dependencies:
2023-07-06 23:49:38,349:INFO:                 pip: 20.3.1
2023-07-06 23:49:38,349:INFO:          setuptools: 51.0.0.post20201207
2023-07-06 23:49:38,350:INFO:             pycaret: 3.0.4
2023-07-06 23:49:38,350:INFO:             IPython: 7.22.0
2023-07-06 23:49:38,350:INFO:          ipywidgets: 8.0.7
2023-07-06 23:49:38,350:INFO:                tqdm: 4.65.0
2023-07-06 23:49:38,350:INFO:               numpy: 1.22.4
2023-07-06 23:49:38,350:INFO:              pandas: 1.5.3
2023-07-06 23:49:38,350:INFO:              jinja2: 3.0.1
2023-07-06 23:49:38,350:INFO:               scipy: 1.7.1
2023-07-06 23:49:38,350:INFO:              joblib: 1.3.1
2023-07-06 23:49:38,350:INFO:             sklearn: 1.2.2
2023-07-06 23:49:38,350:INFO:                pyod: 1.1.0
2023-07-06 23:49:38,350:INFO:            imblearn: 0.10.1
2023-07-06 23:49:38,350:INFO:   category_encoders: 2.6.1
2023-07-06 23:49:38,350:INFO:            lightgbm: 3.3.5
2023-07-06 23:49:38,350:INFO:               numba: 0.57.1
2023-07-06 23:49:38,350:INFO:            requests: 2.31.0
2023-07-06 23:49:38,350:INFO:          matplotlib: 3.4.3
2023-07-06 23:49:38,351:INFO:          scikitplot: 0.3.7
2023-07-06 23:49:38,351:INFO:         yellowbrick: 1.5
2023-07-06 23:49:38,351:INFO:              plotly: 5.15.0
2023-07-06 23:49:38,351:INFO:    plotly-resampler: Not installed
2023-07-06 23:49:38,351:INFO:             kaleido: 0.2.1
2023-07-06 23:49:38,351:INFO:           schemdraw: 0.15
2023-07-06 23:49:38,351:INFO:         statsmodels: 0.14.0
2023-07-06 23:49:38,351:INFO:              sktime: 0.20.0
2023-07-06 23:49:38,351:INFO:               tbats: 1.1.3
2023-07-06 23:49:38,351:INFO:            pmdarima: 2.0.3
2023-07-06 23:49:38,351:INFO:              psutil: 5.9.5
2023-07-06 23:49:38,351:INFO:          markupsafe: 2.0.1
2023-07-06 23:49:38,351:INFO:             pickle5: Not installed
2023-07-06 23:49:38,351:INFO:         cloudpickle: 2.2.1
2023-07-06 23:49:38,351:INFO:         deprecation: 2.1.0
2023-07-06 23:49:38,351:INFO:              xxhash: 3.2.0
2023-07-06 23:49:38,351:INFO:           wurlitzer: 3.0.3
2023-07-06 23:49:38,351:INFO:PyCaret optional dependencies:
2023-07-06 23:49:38,351:INFO:                shap: Not installed
2023-07-06 23:49:38,351:INFO:           interpret: Not installed
2023-07-06 23:49:38,351:INFO:                umap: Not installed
2023-07-06 23:49:38,351:INFO:    pandas_profiling: 3.6.6
2023-07-06 23:49:38,351:INFO:  explainerdashboard: Not installed
2023-07-06 23:49:38,352:INFO:             autoviz: Not installed
2023-07-06 23:49:38,352:INFO:           fairlearn: Not installed
2023-07-06 23:49:38,352:INFO:          deepchecks: Not installed
2023-07-06 23:49:38,352:INFO:             xgboost: Not installed
2023-07-06 23:49:38,352:INFO:            catboost: Not installed
2023-07-06 23:49:38,352:INFO:              kmodes: Not installed
2023-07-06 23:49:38,352:INFO:             mlxtend: Not installed
2023-07-06 23:49:38,352:INFO:       statsforecast: Not installed
2023-07-06 23:49:38,352:INFO:        tune_sklearn: Not installed
2023-07-06 23:49:38,352:INFO:                 ray: Not installed
2023-07-06 23:49:38,352:INFO:            hyperopt: Not installed
2023-07-06 23:49:38,352:INFO:              optuna: Not installed
2023-07-06 23:49:38,352:INFO:               skopt: Not installed
2023-07-06 23:49:38,352:INFO:              mlflow: 2.4.1
2023-07-06 23:49:38,352:INFO:              gradio: Not installed
2023-07-06 23:49:38,352:INFO:             fastapi: Not installed
2023-07-06 23:49:38,352:INFO:             uvicorn: Not installed
2023-07-06 23:49:38,352:INFO:              m2cgen: Not installed
2023-07-06 23:49:38,352:INFO:           evidently: Not installed
2023-07-06 23:49:38,352:INFO:               fugue: Not installed
2023-07-06 23:49:38,352:INFO:           streamlit: Not installed
2023-07-06 23:49:38,352:INFO:             prophet: Not installed
2023-07-06 23:49:38,352:INFO:None
2023-07-06 23:49:38,352:INFO:Set up data.
2023-07-06 23:49:39,402:INFO:Set up train/test split.
2023-07-06 23:49:39,635:INFO:Set up index.
2023-07-06 23:49:39,637:INFO:Set up folding strategy.
2023-07-06 23:49:39,638:INFO:Assigning column types.
2023-07-06 23:49:39,675:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 23:49:39,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,726:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,817:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 23:49:39,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,945:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-06 23:49:39,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:39,971:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-06 23:49:40,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:40,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:40,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:40,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:40,111:INFO:Preparing preprocessing pipeline...
2023-07-06 23:49:40,117:INFO:Set up simple imputation.
2023-07-06 23:49:40,140:INFO:Set up encoding of categorical features.
2023-07-06 23:49:40,145:INFO:Set up column name cleaning.
2023-07-06 23:49:46,307:INFO:Finished creating preprocessing pipeline.
2023-07-06 23:49:46,317:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0_x', 'HighBP',
                                             'HighChol', 'CholCheck', 'BMI',
                                             'Smoker', 'Stroke',
                                             'HeartDiseaseorAttack',
                                             'PhysActivity', 'Fruits',
                                             'Veggies', 'HvyAlcoholConsump',
                                             'AnyHealthcare', 'NoDocbcCost',
                                             'GenHlth', 'MentHlth', 'PhysHlth',
                                             'DiffWalk', 'Sex', 'Age',...
                                    transformer=TargetEncoder(cols=['Patient_ID',
                                                                    'Patient_Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-06 23:49:46,317:INFO:Creating final display dataframe.
2023-07-06 23:49:54,238:INFO:Setup _display_container:                     Description             Value
0                    Session id              1649
1                        Target   Diabetes_binary
2                   Target type            Binary
3           Original data shape      (198929, 34)
4        Transformed data shape      (198929, 34)
5   Transformed train set shape      (139250, 34)
6    Transformed test set shape       (59679, 34)
7              Numeric features                31
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              1ff9
2023-07-06 23:49:54,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:54,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:54,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:54,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 23:49:54,402:INFO:setup() successfully completed in 16.06s...............
2023-07-06 23:50:05,641:INFO:Initializing compare_models()
2023-07-06 23:50:05,641:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-06 23:50:05,641:INFO:Checking exceptions
2023-07-06 23:50:05,672:INFO:Preparing display monitor
2023-07-06 23:50:05,733:INFO:Initializing Logistic Regression
2023-07-06 23:50:05,733:INFO:Total runtime is 8.33272933959961e-06 minutes
2023-07-06 23:50:05,747:INFO:SubProcess create_model() called ==================================
2023-07-06 23:50:05,748:INFO:Initializing create_model()
2023-07-06 23:50:05,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:50:05,748:INFO:Checking exceptions
2023-07-06 23:50:05,748:INFO:Importing libraries
2023-07-06 23:50:05,748:INFO:Copying training dataset
2023-07-06 23:50:05,855:INFO:Defining folds
2023-07-06 23:50:05,855:INFO:Declaring metric variables
2023-07-06 23:50:05,864:INFO:Importing untrained model
2023-07-06 23:50:05,874:INFO:Logistic Regression Imported successfully
2023-07-06 23:50:05,892:INFO:Starting cross validation
2023-07-06 23:50:05,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:50:11,491:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:12,073:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.13s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:12,094:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.44s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:12,593:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:12,693:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.49s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:12,979:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.13s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:13,004:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.47s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:13,332:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:13,332:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.16s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:13,396:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:13,695:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.23s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:13,908:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:14,490:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:14,740:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:15,460:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.19s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:15,491:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:15,532:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:16,222:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:16,423:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:16,455:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:16,513:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:16,948:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:17,275:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:17,308:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:17,481:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:17,568:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:18,007:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:18,257:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:18,321:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:18,751:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:19,082:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:19,715:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:19,775:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:20,238:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:20,431:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:20,791:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:21,546:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:21,912:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:21,999:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:23,309:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:24,085:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:25,114:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:25,134:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:25,550:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.43s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:25,747:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.46s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:25,800:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.44s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:26,428:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.40s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:26,740:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.38s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:50:27,091:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:27,891:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:28,345:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.33s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:28,912:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:28,916:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:30,250:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:31,134:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.42s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:31,318:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.43s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:32,042:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.21s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:32,261:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.21s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:50:33,623:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:33,663:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:34,401:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:34,401:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.24s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:34,401:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:35,590:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:35,613:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:35,689:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:35,705:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:35,892:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:36,543:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:36,571:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:36,679:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.17s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:37,055:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:37,166:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:37,177:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:37,274:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.19s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:37,292:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.13s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:50:37,345:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:37,422:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:37,981:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.38s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:38,024:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:38,175:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.47s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:38,647:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:38,647:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:38,647:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:38,699:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.39s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:38,700:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:38,737:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.44s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:50:38,763:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,175:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,224:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,316:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,580:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,585:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:50:39,734:INFO:Calculating mean and std
2023-07-06 23:50:39,736:INFO:Creating metrics dataframe
2023-07-06 23:50:39,751:INFO:Uploading results into container
2023-07-06 23:50:39,752:INFO:Uploading model into container now
2023-07-06 23:50:39,752:INFO:_master_model_container: 1
2023-07-06 23:50:39,752:INFO:_display_container: 2
2023-07-06 23:50:39,753:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1649, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-06 23:50:39,753:INFO:create_model() successfully completed......................................
2023-07-06 23:50:39,888:INFO:SubProcess create_model() end ==================================
2023-07-06 23:50:39,888:INFO:Creating metrics dataframe
2023-07-06 23:50:39,897:INFO:Initializing K Neighbors Classifier
2023-07-06 23:50:39,897:INFO:Total runtime is 0.569411571820577 minutes
2023-07-06 23:50:39,900:INFO:SubProcess create_model() called ==================================
2023-07-06 23:50:39,901:INFO:Initializing create_model()
2023-07-06 23:50:39,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:50:39,901:INFO:Checking exceptions
2023-07-06 23:50:39,901:INFO:Importing libraries
2023-07-06 23:50:39,901:INFO:Copying training dataset
2023-07-06 23:50:39,965:INFO:Defining folds
2023-07-06 23:50:39,965:INFO:Declaring metric variables
2023-07-06 23:50:39,971:INFO:Importing untrained model
2023-07-06 23:50:39,976:INFO:K Neighbors Classifier Imported successfully
2023-07-06 23:50:39,987:INFO:Starting cross validation
2023-07-06 23:50:39,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:50:56,361:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:00,089:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:10,061:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:10,348:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:10,481:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:51:10,481:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:11,149:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:14,458:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:14,617:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:15,486:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:15,787:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.19s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:15,790:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:16,197:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:51:21,349:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.43s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:56,730:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:51:56,959:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:18,571:INFO:Calculating mean and std
2023-07-06 23:52:18,575:INFO:Creating metrics dataframe
2023-07-06 23:52:18,588:INFO:Uploading results into container
2023-07-06 23:52:18,589:INFO:Uploading model into container now
2023-07-06 23:52:18,590:INFO:_master_model_container: 2
2023-07-06 23:52:18,590:INFO:_display_container: 2
2023-07-06 23:52:18,591:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-06 23:52:18,591:INFO:create_model() successfully completed......................................
2023-07-06 23:52:18,716:INFO:SubProcess create_model() end ==================================
2023-07-06 23:52:18,717:INFO:Creating metrics dataframe
2023-07-06 23:52:18,726:INFO:Initializing Naive Bayes
2023-07-06 23:52:18,727:INFO:Total runtime is 2.216565656661987 minutes
2023-07-06 23:52:18,732:INFO:SubProcess create_model() called ==================================
2023-07-06 23:52:18,732:INFO:Initializing create_model()
2023-07-06 23:52:18,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:52:18,732:INFO:Checking exceptions
2023-07-06 23:52:18,732:INFO:Importing libraries
2023-07-06 23:52:18,732:INFO:Copying training dataset
2023-07-06 23:52:18,792:INFO:Defining folds
2023-07-06 23:52:18,792:INFO:Declaring metric variables
2023-07-06 23:52:18,797:INFO:Importing untrained model
2023-07-06 23:52:18,801:INFO:Naive Bayes Imported successfully
2023-07-06 23:52:18,811:INFO:Starting cross validation
2023-07-06 23:52:18,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:52:24,044:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:24,080:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:48,146:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:49,045:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:49,671:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:50,085:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:51,697:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:52,003:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:52,123:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:52:52,616:INFO:Calculating mean and std
2023-07-06 23:52:52,618:INFO:Creating metrics dataframe
2023-07-06 23:52:52,631:INFO:Uploading results into container
2023-07-06 23:52:52,632:INFO:Uploading model into container now
2023-07-06 23:52:52,632:INFO:_master_model_container: 3
2023-07-06 23:52:52,632:INFO:_display_container: 2
2023-07-06 23:52:52,632:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-06 23:52:52,632:INFO:create_model() successfully completed......................................
2023-07-06 23:52:52,709:INFO:SubProcess create_model() end ==================================
2023-07-06 23:52:52,709:INFO:Creating metrics dataframe
2023-07-06 23:52:52,718:INFO:Initializing Decision Tree Classifier
2023-07-06 23:52:52,719:INFO:Total runtime is 2.7830988287925718 minutes
2023-07-06 23:52:52,722:INFO:SubProcess create_model() called ==================================
2023-07-06 23:52:52,723:INFO:Initializing create_model()
2023-07-06 23:52:52,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:52:52,723:INFO:Checking exceptions
2023-07-06 23:52:52,723:INFO:Importing libraries
2023-07-06 23:52:52,723:INFO:Copying training dataset
2023-07-06 23:52:52,780:INFO:Defining folds
2023-07-06 23:52:52,780:INFO:Declaring metric variables
2023-07-06 23:52:52,785:INFO:Importing untrained model
2023-07-06 23:52:52,789:INFO:Decision Tree Classifier Imported successfully
2023-07-06 23:52:52,800:INFO:Starting cross validation
2023-07-06 23:52:52,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:53:08,779:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:12,214:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:16,483:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:25,946:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:26,309:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:29,094:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:29,295:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:29,544:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:29,705:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:31,018:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:31,457:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:32,114:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:32,302:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:53:32,562:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:32,728:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:33,317:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:53:33,437:INFO:Calculating mean and std
2023-07-06 23:53:33,439:INFO:Creating metrics dataframe
2023-07-06 23:53:33,451:INFO:Uploading results into container
2023-07-06 23:53:33,452:INFO:Uploading model into container now
2023-07-06 23:53:33,453:INFO:_master_model_container: 4
2023-07-06 23:53:33,453:INFO:_display_container: 2
2023-07-06 23:53:33,453:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1649, splitter='best')
2023-07-06 23:53:33,453:INFO:create_model() successfully completed......................................
2023-07-06 23:53:33,531:INFO:SubProcess create_model() end ==================================
2023-07-06 23:53:33,531:INFO:Creating metrics dataframe
2023-07-06 23:53:33,541:INFO:Initializing SVM - Linear Kernel
2023-07-06 23:53:33,541:INFO:Total runtime is 3.463466735680898 minutes
2023-07-06 23:53:33,544:INFO:SubProcess create_model() called ==================================
2023-07-06 23:53:33,544:INFO:Initializing create_model()
2023-07-06 23:53:33,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:53:33,544:INFO:Checking exceptions
2023-07-06 23:53:33,545:INFO:Importing libraries
2023-07-06 23:53:33,545:INFO:Copying training dataset
2023-07-06 23:53:33,600:INFO:Defining folds
2023-07-06 23:53:33,600:INFO:Declaring metric variables
2023-07-06 23:53:33,604:INFO:Importing untrained model
2023-07-06 23:53:33,611:INFO:SVM - Linear Kernel Imported successfully
2023-07-06 23:53:33,624:INFO:Starting cross validation
2023-07-06 23:53:33,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:53:56,124:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:11,972:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:12,141:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:25,519:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:25,530:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:29,085:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:29,096:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:32,662:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:32,670:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:33,252:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:33,259:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:33,476:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:33,485:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:36,464:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:36,473:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:36,886:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:54:36,891:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:38,433:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-07-06 23:54:38,445:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:54:38,701:INFO:Calculating mean and std
2023-07-06 23:54:38,703:INFO:Creating metrics dataframe
2023-07-06 23:54:38,729:INFO:Uploading results into container
2023-07-06 23:54:38,729:INFO:Uploading model into container now
2023-07-06 23:54:38,750:INFO:_master_model_container: 5
2023-07-06 23:54:38,750:INFO:_display_container: 2
2023-07-06 23:54:38,751:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1649, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-06 23:54:38,751:INFO:create_model() successfully completed......................................
2023-07-06 23:54:39,415:INFO:SubProcess create_model() end ==================================
2023-07-06 23:54:39,415:INFO:Creating metrics dataframe
2023-07-06 23:54:39,514:INFO:Initializing Ridge Classifier
2023-07-06 23:54:39,514:INFO:Total runtime is 4.563026722272237 minutes
2023-07-06 23:54:39,518:INFO:SubProcess create_model() called ==================================
2023-07-06 23:54:39,518:INFO:Initializing create_model()
2023-07-06 23:54:39,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:54:39,518:INFO:Checking exceptions
2023-07-06 23:54:39,518:INFO:Importing libraries
2023-07-06 23:54:39,590:INFO:Copying training dataset
2023-07-06 23:54:39,638:INFO:Defining folds
2023-07-06 23:54:39,638:INFO:Declaring metric variables
2023-07-06 23:54:39,643:INFO:Importing untrained model
2023-07-06 23:54:39,648:INFO:Ridge Classifier Imported successfully
2023-07-06 23:54:39,656:INFO:Starting cross validation
2023-07-06 23:54:39,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:55:17,888:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:17,913:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:17,918:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:17,920:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:17,929:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:18,022:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,023:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,023:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,024:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,024:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,045:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:18,048:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:18,049:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:18,054:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:18,054:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:18,055:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:18,056:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:18,087:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:20,884:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:20,892:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:20,916:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:21,380:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:55:21,386:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:21,402:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:22,133:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:22,147:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:22,595:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-07-06 23:55:22,610:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:55:22,745:INFO:Calculating mean and std
2023-07-06 23:55:22,747:INFO:Creating metrics dataframe
2023-07-06 23:55:22,760:INFO:Uploading results into container
2023-07-06 23:55:22,761:INFO:Uploading model into container now
2023-07-06 23:55:22,761:INFO:_master_model_container: 6
2023-07-06 23:55:22,761:INFO:_display_container: 2
2023-07-06 23:55:22,762:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1649, solver='auto',
                tol=0.0001)
2023-07-06 23:55:22,762:INFO:create_model() successfully completed......................................
2023-07-06 23:55:22,836:INFO:SubProcess create_model() end ==================================
2023-07-06 23:55:22,836:INFO:Creating metrics dataframe
2023-07-06 23:55:22,846:INFO:Initializing Random Forest Classifier
2023-07-06 23:55:22,847:INFO:Total runtime is 5.2852313160896305 minutes
2023-07-06 23:55:22,850:INFO:SubProcess create_model() called ==================================
2023-07-06 23:55:22,851:INFO:Initializing create_model()
2023-07-06 23:55:22,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:55:22,851:INFO:Checking exceptions
2023-07-06 23:55:22,851:INFO:Importing libraries
2023-07-06 23:55:22,851:INFO:Copying training dataset
2023-07-06 23:55:22,903:INFO:Defining folds
2023-07-06 23:55:22,904:INFO:Declaring metric variables
2023-07-06 23:55:22,908:INFO:Importing untrained model
2023-07-06 23:55:22,912:INFO:Random Forest Classifier Imported successfully
2023-07-06 23:55:22,922:INFO:Starting cross validation
2023-07-06 23:55:22,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:56:04,954:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:56:05,531:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:56:06,140:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:56:14,760:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:56:20,415:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 2.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:56:22,098:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:22,265:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 2.11s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:23,885:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 2.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:24,665:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 2.49s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:25,427:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:26,469:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:27,311:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.33s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:28,819:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-06 23:56:30,033:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:56:30,045:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:56:30,062:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:56:32,671:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:32,815:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:32,896:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:33,134:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:33,463:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.23s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:33,499:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:33,527:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:34,188:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,188:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,200:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,407:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,671:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.31s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:34,737:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,741:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,811:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:34,852:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:34,939:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:56:35,472:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:35,613:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:35,681:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:56:36,812:INFO:Calculating mean and std
2023-07-06 23:56:36,883:INFO:Creating metrics dataframe
2023-07-06 23:56:36,897:INFO:Uploading results into container
2023-07-06 23:56:36,898:INFO:Uploading model into container now
2023-07-06 23:56:36,898:INFO:_master_model_container: 7
2023-07-06 23:56:36,898:INFO:_display_container: 2
2023-07-06 23:56:36,899:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1649, verbose=0, warm_start=False)
2023-07-06 23:56:36,899:INFO:create_model() successfully completed......................................
2023-07-06 23:56:38,585:INFO:SubProcess create_model() end ==================================
2023-07-06 23:56:38,585:INFO:Creating metrics dataframe
2023-07-06 23:56:38,795:INFO:Initializing Quadratic Discriminant Analysis
2023-07-06 23:56:38,795:INFO:Total runtime is 6.551042759418488 minutes
2023-07-06 23:56:38,799:INFO:SubProcess create_model() called ==================================
2023-07-06 23:56:38,799:INFO:Initializing create_model()
2023-07-06 23:56:38,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:56:38,800:INFO:Checking exceptions
2023-07-06 23:56:38,800:INFO:Importing libraries
2023-07-06 23:56:38,813:INFO:Copying training dataset
2023-07-06 23:56:38,872:INFO:Defining folds
2023-07-06 23:56:38,872:INFO:Declaring metric variables
2023-07-06 23:56:38,876:INFO:Importing untrained model
2023-07-06 23:56:38,880:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-06 23:56:38,887:INFO:Starting cross validation
2023-07-06 23:56:38,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:57:11,643:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:15,452:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:16,360:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:24,093:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:26,765:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:26,917:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:27,059:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:27,059:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:27,914:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:28,242:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:30,488:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:30,748:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:31,016:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:31,368:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:32,657:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:32,899:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:33,048:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:33,681:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:34,116:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:34,933:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-07-06 23:57:35,745:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:35,837:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:35,874:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:57:36,192:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:36,279:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:36,291:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:38,114:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:57:38,255:INFO:Calculating mean and std
2023-07-06 23:57:38,358:INFO:Creating metrics dataframe
2023-07-06 23:57:38,373:INFO:Uploading results into container
2023-07-06 23:57:38,374:INFO:Uploading model into container now
2023-07-06 23:57:38,374:INFO:_master_model_container: 8
2023-07-06 23:57:38,374:INFO:_display_container: 2
2023-07-06 23:57:38,374:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-06 23:57:38,374:INFO:create_model() successfully completed......................................
2023-07-06 23:57:39,842:INFO:SubProcess create_model() end ==================================
2023-07-06 23:57:39,842:INFO:Creating metrics dataframe
2023-07-06 23:57:39,898:INFO:Initializing Ada Boost Classifier
2023-07-06 23:57:39,898:INFO:Total runtime is 7.569417909781139 minutes
2023-07-06 23:57:39,901:INFO:SubProcess create_model() called ==================================
2023-07-06 23:57:39,902:INFO:Initializing create_model()
2023-07-06 23:57:39,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:57:39,902:INFO:Checking exceptions
2023-07-06 23:57:39,902:INFO:Importing libraries
2023-07-06 23:57:39,902:INFO:Copying training dataset
2023-07-06 23:57:39,974:INFO:Defining folds
2023-07-06 23:57:39,974:INFO:Declaring metric variables
2023-07-06 23:57:39,978:INFO:Importing untrained model
2023-07-06 23:57:39,983:INFO:Ada Boost Classifier Imported successfully
2023-07-06 23:57:39,991:INFO:Starting cross validation
2023-07-06 23:57:39,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:58:25,379:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 5.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:58:25,379:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 4.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-06 23:58:29,936:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 3.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2023-07-06 23:58:38,938:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:58:39,285:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:58:39,291:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:58:39,293:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 23:58:41,284:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:41,587:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:41,896:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:42,512:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:43,163:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:43,165:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:43,170:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:43,171:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:43,579:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,007:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,019:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,041:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,081:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,134:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:58:44,297:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:44,623:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:44,674:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:44,677:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:44,694:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:44,729:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-06 23:58:48,581:INFO:Calculating mean and std
2023-07-06 23:58:48,683:INFO:Creating metrics dataframe
2023-07-06 23:58:48,746:INFO:Uploading results into container
2023-07-06 23:58:48,747:INFO:Uploading model into container now
2023-07-06 23:58:48,747:INFO:_master_model_container: 9
2023-07-06 23:58:48,747:INFO:_display_container: 2
2023-07-06 23:58:48,748:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1649)
2023-07-06 23:58:48,748:INFO:create_model() successfully completed......................................
2023-07-06 23:58:50,502:INFO:SubProcess create_model() end ==================================
2023-07-06 23:58:50,502:INFO:Creating metrics dataframe
2023-07-06 23:58:50,548:INFO:Initializing Gradient Boosting Classifier
2023-07-06 23:58:50,548:INFO:Total runtime is 8.746922385692598 minutes
2023-07-06 23:58:50,551:INFO:SubProcess create_model() called ==================================
2023-07-06 23:58:50,551:INFO:Initializing create_model()
2023-07-06 23:58:50,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 23:58:50,552:INFO:Checking exceptions
2023-07-06 23:58:50,552:INFO:Importing libraries
2023-07-06 23:58:50,552:INFO:Copying training dataset
2023-07-06 23:58:50,597:INFO:Defining folds
2023-07-06 23:58:50,597:INFO:Declaring metric variables
2023-07-06 23:58:50,601:INFO:Importing untrained model
2023-07-06 23:58:50,605:INFO:Gradient Boosting Classifier Imported successfully
2023-07-06 23:58:50,612:INFO:Starting cross validation
2023-07-06 23:58:50,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 23:59:52,480:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 23:59:53,619:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:01,047:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:02,429:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:11,667:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:12,535:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:12,962:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:13,495:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:14,702:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:15,747:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:16,094:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:16,381:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:16,487:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:16,565:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:16,750:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:16,896:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:00:17,085:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:17,181:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:17,416:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:00:17,561:INFO:Calculating mean and std
2023-07-07 00:00:17,582:INFO:Creating metrics dataframe
2023-07-07 00:00:17,604:INFO:Uploading results into container
2023-07-07 00:00:17,604:INFO:Uploading model into container now
2023-07-07 00:00:17,605:INFO:_master_model_container: 10
2023-07-07 00:00:17,605:INFO:_display_container: 2
2023-07-07 00:00:17,605:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1649, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 00:00:17,605:INFO:create_model() successfully completed......................................
2023-07-07 00:00:17,694:INFO:SubProcess create_model() end ==================================
2023-07-07 00:00:17,694:INFO:Creating metrics dataframe
2023-07-07 00:00:17,725:INFO:Initializing Linear Discriminant Analysis
2023-07-07 00:00:17,726:INFO:Total runtime is 10.199882117907208 minutes
2023-07-07 00:00:17,729:INFO:SubProcess create_model() called ==================================
2023-07-07 00:00:17,729:INFO:Initializing create_model()
2023-07-07 00:00:17,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 00:00:17,729:INFO:Checking exceptions
2023-07-07 00:00:17,729:INFO:Importing libraries
2023-07-07 00:00:17,729:INFO:Copying training dataset
2023-07-07 00:00:17,805:INFO:Defining folds
2023-07-07 00:00:17,805:INFO:Declaring metric variables
2023-07-07 00:00:17,809:INFO:Importing untrained model
2023-07-07 00:00:17,815:INFO:Linear Discriminant Analysis Imported successfully
2023-07-07 00:00:17,823:INFO:Starting cross validation
2023-07-07 00:00:17,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-07 00:00:56,741:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:01:09,815:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:09,869:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:11,277:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:11,280:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:13,422:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:13,769:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:13,889:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:14,095:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:15,045:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:17,896:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:18,324:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:19,033:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:19,517:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:19,678:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:20,189:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:20,190:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:01:20,530:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:22,704:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:01:23,318:INFO:Calculating mean and std
2023-07-07 00:01:23,338:INFO:Creating metrics dataframe
2023-07-07 00:01:23,374:INFO:Uploading results into container
2023-07-07 00:01:23,374:INFO:Uploading model into container now
2023-07-07 00:01:23,444:INFO:_master_model_container: 11
2023-07-07 00:01:23,444:INFO:_display_container: 2
2023-07-07 00:01:23,445:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-07 00:01:23,445:INFO:create_model() successfully completed......................................
2023-07-07 00:01:23,617:INFO:SubProcess create_model() end ==================================
2023-07-07 00:01:23,618:INFO:Creating metrics dataframe
2023-07-07 00:01:23,634:INFO:Initializing Extra Trees Classifier
2023-07-07 00:01:23,634:INFO:Total runtime is 11.29835112889608 minutes
2023-07-07 00:01:23,637:INFO:SubProcess create_model() called ==================================
2023-07-07 00:01:23,637:INFO:Initializing create_model()
2023-07-07 00:01:23,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 00:01:23,637:INFO:Checking exceptions
2023-07-07 00:01:23,638:INFO:Importing libraries
2023-07-07 00:01:23,638:INFO:Copying training dataset
2023-07-07 00:01:23,691:INFO:Defining folds
2023-07-07 00:01:23,691:INFO:Declaring metric variables
2023-07-07 00:01:23,695:INFO:Importing untrained model
2023-07-07 00:01:23,698:INFO:Extra Trees Classifier Imported successfully
2023-07-07 00:01:23,704:INFO:Starting cross validation
2023-07-07 00:01:23,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-07 00:02:21,275:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:21,910:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:23,722:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:33,146:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:02:33,177:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:02:33,201:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:33,596:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 5.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:33,937:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:33,974:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:34,038:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:02:34,038:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:02:36,083:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:36,166:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:36,244:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:38,178:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:38,771:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:39,249:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:39,307:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:39,548:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:40,024:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:40,154:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:40,171:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:02:40,375:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:40,799:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:02:43,784:INFO:Calculating mean and std
2023-07-07 00:02:43,855:INFO:Creating metrics dataframe
2023-07-07 00:02:43,903:INFO:Uploading results into container
2023-07-07 00:02:43,904:INFO:Uploading model into container now
2023-07-07 00:02:43,904:INFO:_master_model_container: 12
2023-07-07 00:02:43,904:INFO:_display_container: 2
2023-07-07 00:02:43,905:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1649, verbose=0, warm_start=False)
2023-07-07 00:02:43,905:INFO:create_model() successfully completed......................................
2023-07-07 00:02:45,952:INFO:SubProcess create_model() end ==================================
2023-07-07 00:02:45,953:INFO:Creating metrics dataframe
2023-07-07 00:02:46,040:INFO:Initializing Light Gradient Boosting Machine
2023-07-07 00:02:46,040:INFO:Total runtime is 12.671787146727247 minutes
2023-07-07 00:02:46,043:INFO:SubProcess create_model() called ==================================
2023-07-07 00:02:46,043:INFO:Initializing create_model()
2023-07-07 00:02:46,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 00:02:46,044:INFO:Checking exceptions
2023-07-07 00:02:46,044:INFO:Importing libraries
2023-07-07 00:02:46,095:INFO:Copying training dataset
2023-07-07 00:02:46,180:INFO:Defining folds
2023-07-07 00:02:46,180:INFO:Declaring metric variables
2023-07-07 00:02:46,183:INFO:Importing untrained model
2023-07-07 00:02:46,187:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-07 00:02:46,193:INFO:Starting cross validation
2023-07-07 00:02:46,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-07 00:02:52,590:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 4.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-07 00:02:52,594:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 4.31s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-07 00:03:38,486:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-07 00:03:38,486:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2023-07-07 00:03:38,490:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:03:38,491:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 00:03:52,887:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 5.42s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:52,898:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 4.41s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:52,916:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 6.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:52,919:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 5.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:52,920:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:53,689:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:54,533:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:54,591:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:54,593:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:54,594:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:54,598:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:54,681:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:54,707:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:55,099:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:56,164:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:58,758:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:03:58,796:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:03:59,167:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:04:01,467:INFO:Calculating mean and std
2023-07-07 00:04:01,534:INFO:Creating metrics dataframe
2023-07-07 00:04:01,569:INFO:Uploading results into container
2023-07-07 00:04:01,570:INFO:Uploading model into container now
2023-07-07 00:04:01,571:INFO:_master_model_container: 13
2023-07-07 00:04:01,571:INFO:_display_container: 2
2023-07-07 00:04:01,571:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1649, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-07 00:04:01,571:INFO:create_model() successfully completed......................................
2023-07-07 00:04:03,690:INFO:SubProcess create_model() end ==================================
2023-07-07 00:04:03,690:INFO:Creating metrics dataframe
2023-07-07 00:04:03,732:INFO:Initializing Dummy Classifier
2023-07-07 00:04:03,732:INFO:Total runtime is 13.966660960515343 minutes
2023-07-07 00:04:03,736:INFO:SubProcess create_model() called ==================================
2023-07-07 00:04:03,736:INFO:Initializing create_model()
2023-07-07 00:04:03,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6514769460>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 00:04:03,736:INFO:Checking exceptions
2023-07-07 00:04:03,736:INFO:Importing libraries
2023-07-07 00:04:03,742:INFO:Copying training dataset
2023-07-07 00:04:03,794:INFO:Defining folds
2023-07-07 00:04:03,795:INFO:Declaring metric variables
2023-07-07 00:04:03,799:INFO:Importing untrained model
2023-07-07 00:04:03,802:INFO:Dummy Classifier Imported successfully
2023-07-07 00:04:03,812:INFO:Starting cross validation
2023-07-07 00:04:03,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-07 00:04:58,740:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:00,069:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:00,192:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:00,510:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:01,522:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:01,810:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:02,231:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:02,641:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:02,994:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:03,729:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:04,217:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:04,391:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:04,688:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:04,699:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:04,857:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:05,079:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:05,248:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 00:05:05,567:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-07-07 00:05:05,715:INFO:Calculating mean and std
2023-07-07 00:05:05,724:INFO:Creating metrics dataframe
2023-07-07 00:05:05,753:INFO:Uploading results into container
2023-07-07 00:05:05,753:INFO:Uploading model into container now
2023-07-07 00:05:05,754:INFO:_master_model_container: 14
2023-07-07 00:05:05,754:INFO:_display_container: 2
2023-07-07 00:05:05,754:INFO:DummyClassifier(constant=None, random_state=1649, strategy='prior')
2023-07-07 00:05:05,754:INFO:create_model() successfully completed......................................
2023-07-07 00:05:05,836:INFO:SubProcess create_model() end ==================================
2023-07-07 00:05:05,836:INFO:Creating metrics dataframe
2023-07-07 00:05:05,858:INFO:Initializing create_model()
2023-07-07 00:05:05,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64a528b910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1649, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-07 00:05:05,859:INFO:Checking exceptions
2023-07-07 00:05:05,866:INFO:Importing libraries
2023-07-07 00:05:05,866:INFO:Copying training dataset
2023-07-07 00:05:05,927:INFO:Defining folds
2023-07-07 00:05:05,927:INFO:Declaring metric variables
2023-07-07 00:05:05,928:INFO:Importing untrained model
2023-07-07 00:05:05,928:INFO:Declaring custom model
2023-07-07 00:05:05,928:INFO:Logistic Regression Imported successfully
2023-07-07 00:05:05,930:INFO:Cross validation set to False
2023-07-07 00:05:05,930:INFO:Fitting Model
2023-07-07 00:05:11,869:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1649, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-07 00:05:11,870:INFO:create_model() successfully completed......................................
2023-07-07 00:05:11,988:INFO:_master_model_container: 14
2023-07-07 00:05:11,989:INFO:_display_container: 2
2023-07-07 00:05:11,989:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1649, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-07 00:05:11,989:INFO:compare_models() successfully completed......................................
2023-07-07 09:49:31,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 09:49:31,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 09:49:31,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 09:49:31,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:47,860:INFO:PyCaret ClassificationExperiment
2023-07-07 10:00:47,860:INFO:Logging name: Diabaties_detection_02
2023-07-07 10:00:47,860:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-07 10:00:47,860:INFO:version 3.0.4
2023-07-07 10:00:47,860:INFO:Initializing setup()
2023-07-07 10:00:47,860:INFO:self.USI: 3572
2023-07-07 10:00:47,860:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'gpu_n_jobs_param', 'logging_param', 'pipeline', 'X', 'fold_groups_param', 'y', 'USI', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'seed', 'target_param', 'html_param', 'y_test', 'is_multiclass', 'log_plots_param', 'idx', 'y_train', 'fold_generator', 'data', 'memory', '_ml_usecase', 'exp_id', 'fix_imbalance', 'X_test', 'X_train'}
2023-07-07 10:00:47,860:INFO:Checking environment
2023-07-07 10:00:47,860:INFO:python_version: 3.9.1
2023-07-07 10:00:47,860:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-07 10:00:47,860:INFO:machine: x86_64
2023-07-07 10:00:47,909:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:00:47,910:INFO:Memory: svmem(total=8260853760, available=5280985088, percent=36.1, used=2671579136, free=4641734656, active=2773331968, inactive=500822016, buffers=173883392, cached=773656576, shared=73728, slab=229076992)
2023-07-07 10:00:47,911:INFO:Physical Core: 6
2023-07-07 10:00:47,911:INFO:Logical Core: 12
2023-07-07 10:00:47,911:INFO:Checking libraries
2023-07-07 10:00:47,911:INFO:System:
2023-07-07 10:00:47,911:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-07 10:00:47,911:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-07 10:00:47,911:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:00:47,911:INFO:PyCaret required dependencies:
2023-07-07 10:00:47,914:INFO:                 pip: 20.3.1
2023-07-07 10:00:47,915:INFO:          setuptools: 51.0.0.post20201207
2023-07-07 10:00:47,915:INFO:             pycaret: 3.0.4
2023-07-07 10:00:47,915:INFO:             IPython: 7.22.0
2023-07-07 10:00:47,915:INFO:          ipywidgets: 8.0.7
2023-07-07 10:00:47,915:INFO:                tqdm: 4.65.0
2023-07-07 10:00:47,915:INFO:               numpy: 1.22.4
2023-07-07 10:00:47,915:INFO:              pandas: 1.5.3
2023-07-07 10:00:47,915:INFO:              jinja2: 3.0.1
2023-07-07 10:00:47,915:INFO:               scipy: 1.7.1
2023-07-07 10:00:47,915:INFO:              joblib: 1.3.1
2023-07-07 10:00:47,915:INFO:             sklearn: 1.2.2
2023-07-07 10:00:47,915:INFO:                pyod: 1.1.0
2023-07-07 10:00:47,915:INFO:            imblearn: 0.10.1
2023-07-07 10:00:47,915:INFO:   category_encoders: 2.6.1
2023-07-07 10:00:47,915:INFO:            lightgbm: 3.3.5
2023-07-07 10:00:47,915:INFO:               numba: 0.57.1
2023-07-07 10:00:47,915:INFO:            requests: 2.31.0
2023-07-07 10:00:47,915:INFO:          matplotlib: 3.4.3
2023-07-07 10:00:47,915:INFO:          scikitplot: 0.3.7
2023-07-07 10:00:47,915:INFO:         yellowbrick: 1.5
2023-07-07 10:00:47,915:INFO:              plotly: 5.15.0
2023-07-07 10:00:47,915:INFO:    plotly-resampler: Not installed
2023-07-07 10:00:47,915:INFO:             kaleido: 0.2.1
2023-07-07 10:00:47,915:INFO:           schemdraw: 0.15
2023-07-07 10:00:47,915:INFO:         statsmodels: 0.14.0
2023-07-07 10:00:47,915:INFO:              sktime: 0.20.0
2023-07-07 10:00:47,915:INFO:               tbats: 1.1.3
2023-07-07 10:00:47,915:INFO:            pmdarima: 2.0.3
2023-07-07 10:00:47,915:INFO:              psutil: 5.9.5
2023-07-07 10:00:47,915:INFO:          markupsafe: 2.0.1
2023-07-07 10:00:47,915:INFO:             pickle5: Not installed
2023-07-07 10:00:47,916:INFO:         cloudpickle: 2.2.1
2023-07-07 10:00:47,916:INFO:         deprecation: 2.1.0
2023-07-07 10:00:47,916:INFO:              xxhash: 3.2.0
2023-07-07 10:00:47,916:INFO:           wurlitzer: 3.0.3
2023-07-07 10:00:47,916:INFO:PyCaret optional dependencies:
2023-07-07 10:00:47,949:INFO:                shap: Not installed
2023-07-07 10:00:47,949:INFO:           interpret: Not installed
2023-07-07 10:00:47,949:INFO:                umap: Not installed
2023-07-07 10:00:47,949:INFO:    pandas_profiling: 3.6.6
2023-07-07 10:00:47,949:INFO:  explainerdashboard: Not installed
2023-07-07 10:00:47,949:INFO:             autoviz: Not installed
2023-07-07 10:00:47,949:INFO:           fairlearn: Not installed
2023-07-07 10:00:47,949:INFO:          deepchecks: Not installed
2023-07-07 10:00:47,949:INFO:             xgboost: Not installed
2023-07-07 10:00:47,949:INFO:            catboost: Not installed
2023-07-07 10:00:47,949:INFO:              kmodes: Not installed
2023-07-07 10:00:47,949:INFO:             mlxtend: Not installed
2023-07-07 10:00:47,949:INFO:       statsforecast: Not installed
2023-07-07 10:00:47,949:INFO:        tune_sklearn: Not installed
2023-07-07 10:00:47,949:INFO:                 ray: Not installed
2023-07-07 10:00:47,949:INFO:            hyperopt: Not installed
2023-07-07 10:00:47,949:INFO:              optuna: Not installed
2023-07-07 10:00:47,949:INFO:               skopt: Not installed
2023-07-07 10:00:47,949:INFO:              mlflow: 2.4.1
2023-07-07 10:00:47,950:INFO:              gradio: Not installed
2023-07-07 10:00:47,950:INFO:             fastapi: Not installed
2023-07-07 10:00:47,950:INFO:             uvicorn: Not installed
2023-07-07 10:00:47,950:INFO:              m2cgen: Not installed
2023-07-07 10:00:47,950:INFO:           evidently: Not installed
2023-07-07 10:00:47,950:INFO:               fugue: Not installed
2023-07-07 10:00:47,950:INFO:           streamlit: Not installed
2023-07-07 10:00:47,950:INFO:             prophet: Not installed
2023-07-07 10:00:47,950:INFO:None
2023-07-07 10:00:47,950:INFO:Set up GPU usage.
2023-07-07 10:00:47,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:47,950:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-07 10:00:47,950:INFO:Set up data.
2023-07-07 10:00:48,689:INFO:Set up train/test split.
2023-07-07 10:00:48,934:INFO:Set up index.
2023-07-07 10:00:48,940:INFO:Set up folding strategy.
2023-07-07 10:00:48,941:INFO:Assigning column types.
2023-07-07 10:00:48,988:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-07 10:00:48,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:49,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:00:49,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:49,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:49,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:00:49,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,366:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:00:50,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:00:50,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,389:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,394:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-07 10:00:50,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,432:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:00:50,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:00:50,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,527:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-07 10:00:50,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,661:INFO:Preparing preprocessing pipeline...
2023-07-07 10:00:50,666:INFO:Set up simple imputation.
2023-07-07 10:00:50,666:INFO:Set up feature normalization.
2023-07-07 10:00:50,666:INFO:Set up feature selection.
2023-07-07 10:00:50,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:50,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:50,743:INFO:Set up column name cleaning.
2023-07-07 10:00:53,163:INFO:Finished creating preprocessing pipeline.
2023-07-07 10:00:53,173:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:00:53,173:INFO:Creating final display dataframe.
2023-07-07 10:00:53,620:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (234034, 32)
4        Transformed data shape             (234034, 6)
5   Transformed train set shape             (163823, 6)
6    Transformed test set shape              (70211, 6)
7               Ignore features                       4
8              Numeric features                       2
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15            Feature selection                    True
16     Feature selection method                 classic
17  Feature selection estimator                lightgbm
18  Number of features selected                     0.2
19               Fold Generator         StratifiedKFold
20                  Fold Number                      10
21                     CPU Jobs                      -1
22                      Use GPU                    True
23               Log Experiment            MlflowLogger
24              Experiment Name  Diabaties_detection_02
25                          USI                    3572
2023-07-07 10:00:53,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:53,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:53,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:00:53,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:53,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:00:53,810:INFO:Logging experiment in loggers
2023-07-07 10:00:54,451:INFO:SubProcess save_model() called ==================================
2023-07-07 10:00:54,472:INFO:Initializing save_model()
2023-07-07 10:00:54,472:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmpanhd8249/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-07 10:00:54,472:INFO:Adding model into prep_pipe
2023-07-07 10:00:54,472:WARNING:Only Model saved as it was a pipeline.
2023-07-07 10:00:54,480:INFO:/tmp/tmpanhd8249/Transformation Pipeline.pkl saved in current working directory
2023-07-07 10:00:54,490:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:00:54,490:INFO:save_model() successfully completed......................................
2023-07-07 10:00:54,755:INFO:SubProcess save_model() end ==================================
2023-07-07 10:01:07,786:INFO:PyCaret ClassificationExperiment
2023-07-07 10:01:07,787:INFO:Logging name: Diabaties_detection_02
2023-07-07 10:01:07,787:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-07 10:01:07,787:INFO:version 3.0.4
2023-07-07 10:01:07,787:INFO:Initializing setup()
2023-07-07 10:01:07,787:INFO:self.USI: d5b3
2023-07-07 10:01:07,787:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'gpu_n_jobs_param', 'logging_param', 'pipeline', 'X', 'fold_groups_param', 'y', 'USI', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'seed', 'target_param', 'html_param', 'y_test', 'is_multiclass', 'log_plots_param', 'idx', 'y_train', 'fold_generator', 'data', 'memory', '_ml_usecase', 'exp_id', 'fix_imbalance', 'X_test', 'X_train'}
2023-07-07 10:01:07,787:INFO:Checking environment
2023-07-07 10:01:07,787:INFO:python_version: 3.9.1
2023-07-07 10:01:07,787:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-07 10:01:07,787:INFO:machine: x86_64
2023-07-07 10:01:07,787:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:01:07,787:INFO:Memory: svmem(total=8260853760, available=5290233856, percent=36.0, used=2662293504, free=4615278592, active=2792738816, inactive=507551744, buffers=173940736, cached=809340928, shared=73728, slab=230215680)
2023-07-07 10:01:07,788:INFO:Physical Core: 6
2023-07-07 10:01:07,788:INFO:Logical Core: 12
2023-07-07 10:01:07,788:INFO:Checking libraries
2023-07-07 10:01:07,788:INFO:System:
2023-07-07 10:01:07,788:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-07 10:01:07,788:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-07 10:01:07,789:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:01:07,789:INFO:PyCaret required dependencies:
2023-07-07 10:01:07,789:INFO:                 pip: 20.3.1
2023-07-07 10:01:07,789:INFO:          setuptools: 51.0.0.post20201207
2023-07-07 10:01:07,789:INFO:             pycaret: 3.0.4
2023-07-07 10:01:07,789:INFO:             IPython: 7.22.0
2023-07-07 10:01:07,789:INFO:          ipywidgets: 8.0.7
2023-07-07 10:01:07,789:INFO:                tqdm: 4.65.0
2023-07-07 10:01:07,789:INFO:               numpy: 1.22.4
2023-07-07 10:01:07,790:INFO:              pandas: 1.5.3
2023-07-07 10:01:07,790:INFO:              jinja2: 3.0.1
2023-07-07 10:01:07,790:INFO:               scipy: 1.7.1
2023-07-07 10:01:07,790:INFO:              joblib: 1.3.1
2023-07-07 10:01:07,790:INFO:             sklearn: 1.2.2
2023-07-07 10:01:07,790:INFO:                pyod: 1.1.0
2023-07-07 10:01:07,790:INFO:            imblearn: 0.10.1
2023-07-07 10:01:07,790:INFO:   category_encoders: 2.6.1
2023-07-07 10:01:07,790:INFO:            lightgbm: 3.3.5
2023-07-07 10:01:07,790:INFO:               numba: 0.57.1
2023-07-07 10:01:07,790:INFO:            requests: 2.31.0
2023-07-07 10:01:07,790:INFO:          matplotlib: 3.4.3
2023-07-07 10:01:07,790:INFO:          scikitplot: 0.3.7
2023-07-07 10:01:07,790:INFO:         yellowbrick: 1.5
2023-07-07 10:01:07,790:INFO:              plotly: 5.15.0
2023-07-07 10:01:07,790:INFO:    plotly-resampler: Not installed
2023-07-07 10:01:07,790:INFO:             kaleido: 0.2.1
2023-07-07 10:01:07,790:INFO:           schemdraw: 0.15
2023-07-07 10:01:07,790:INFO:         statsmodels: 0.14.0
2023-07-07 10:01:07,790:INFO:              sktime: 0.20.0
2023-07-07 10:01:07,790:INFO:               tbats: 1.1.3
2023-07-07 10:01:07,790:INFO:            pmdarima: 2.0.3
2023-07-07 10:01:07,790:INFO:              psutil: 5.9.5
2023-07-07 10:01:07,790:INFO:          markupsafe: 2.0.1
2023-07-07 10:01:07,790:INFO:             pickle5: Not installed
2023-07-07 10:01:07,790:INFO:         cloudpickle: 2.2.1
2023-07-07 10:01:07,791:INFO:         deprecation: 2.1.0
2023-07-07 10:01:07,791:INFO:              xxhash: 3.2.0
2023-07-07 10:01:07,791:INFO:           wurlitzer: 3.0.3
2023-07-07 10:01:07,791:INFO:PyCaret optional dependencies:
2023-07-07 10:01:07,791:INFO:                shap: Not installed
2023-07-07 10:01:07,791:INFO:           interpret: Not installed
2023-07-07 10:01:07,791:INFO:                umap: Not installed
2023-07-07 10:01:07,791:INFO:    pandas_profiling: 3.6.6
2023-07-07 10:01:07,791:INFO:  explainerdashboard: Not installed
2023-07-07 10:01:07,791:INFO:             autoviz: Not installed
2023-07-07 10:01:07,791:INFO:           fairlearn: Not installed
2023-07-07 10:01:07,791:INFO:          deepchecks: Not installed
2023-07-07 10:01:07,791:INFO:             xgboost: Not installed
2023-07-07 10:01:07,791:INFO:            catboost: Not installed
2023-07-07 10:01:07,791:INFO:              kmodes: Not installed
2023-07-07 10:01:07,791:INFO:             mlxtend: Not installed
2023-07-07 10:01:07,791:INFO:       statsforecast: Not installed
2023-07-07 10:01:07,791:INFO:        tune_sklearn: Not installed
2023-07-07 10:01:07,791:INFO:                 ray: Not installed
2023-07-07 10:01:07,792:INFO:            hyperopt: Not installed
2023-07-07 10:01:07,792:INFO:              optuna: Not installed
2023-07-07 10:01:07,792:INFO:               skopt: Not installed
2023-07-07 10:01:07,792:INFO:              mlflow: 2.4.1
2023-07-07 10:01:07,792:INFO:              gradio: Not installed
2023-07-07 10:01:07,792:INFO:             fastapi: Not installed
2023-07-07 10:01:07,792:INFO:             uvicorn: Not installed
2023-07-07 10:01:07,792:INFO:              m2cgen: Not installed
2023-07-07 10:01:07,792:INFO:           evidently: Not installed
2023-07-07 10:01:07,792:INFO:               fugue: Not installed
2023-07-07 10:01:07,792:INFO:           streamlit: Not installed
2023-07-07 10:01:07,792:INFO:             prophet: Not installed
2023-07-07 10:01:07,792:INFO:None
2023-07-07 10:01:07,792:INFO:Set up GPU usage.
2023-07-07 10:01:07,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:07,792:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-07 10:01:07,792:INFO:Set up data.
2023-07-07 10:01:08,453:INFO:Set up train/test split.
2023-07-07 10:01:08,707:INFO:Set up index.
2023-07-07 10:01:08,711:INFO:Set up folding strategy.
2023-07-07 10:01:08,712:INFO:Assigning column types.
2023-07-07 10:01:08,747:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-07 10:01:08,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:01:08,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,803:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:01:08,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:08,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:08,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,952:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:01:08,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:01:08,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:08,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,029:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-07 10:01:09,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,094:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:01:09,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,262:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:01:09,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,303:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-07 10:01:09,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,389:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,470:INFO:Preparing preprocessing pipeline...
2023-07-07 10:01:09,476:INFO:Set up simple imputation.
2023-07-07 10:01:09,477:INFO:Set up feature normalization.
2023-07-07 10:01:09,477:INFO:Set up feature selection.
2023-07-07 10:01:09,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:09,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:09,562:INFO:Set up column name cleaning.
2023-07-07 10:01:09,699:INFO:Finished creating preprocessing pipeline.
2023-07-07 10:01:09,709:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:01:09,709:INFO:Creating final display dataframe.
2023-07-07 10:01:10,142:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (234034, 32)
4        Transformed data shape             (234034, 6)
5   Transformed train set shape             (163823, 6)
6    Transformed test set shape              (70211, 6)
7               Ignore features                       4
8              Numeric features                       2
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15            Feature selection                    True
16     Feature selection method                 classic
17  Feature selection estimator                lightgbm
18  Number of features selected                     0.2
19               Fold Generator         StratifiedKFold
20                  Fold Number                      10
21                     CPU Jobs                      -1
22                      Use GPU                    True
23               Log Experiment            MlflowLogger
24              Experiment Name  Diabaties_detection_02
25                          USI                    d5b3
2023-07-07 10:01:10,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:10,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:10,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:01:10,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:10,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:01:10,317:INFO:Logging experiment in loggers
2023-07-07 10:01:10,335:INFO:SubProcess save_model() called ==================================
2023-07-07 10:01:10,355:INFO:Initializing save_model()
2023-07-07 10:01:10,355:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmppxakhn4e/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-07 10:01:10,355:INFO:Adding model into prep_pipe
2023-07-07 10:01:10,355:WARNING:Only Model saved as it was a pipeline.
2023-07-07 10:01:10,362:INFO:/tmp/tmppxakhn4e/Transformation Pipeline.pkl saved in current working directory
2023-07-07 10:01:10,372:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:01:10,372:INFO:save_model() successfully completed......................................
2023-07-07 10:01:10,475:INFO:SubProcess save_model() end ==================================
2023-07-07 10:01:10,478:INFO:setup() successfully completed in 2.55s...............
2023-07-07 10:01:37,032:INFO:Initializing compare_models()
2023-07-07 10:01:37,032:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-07 10:01:37,032:INFO:Checking exceptions
2023-07-07 10:01:37,060:INFO:Preparing display monitor
2023-07-07 10:01:37,107:INFO:Initializing Logistic Regression
2023-07-07 10:01:37,107:INFO:Total runtime is 4.498163859049479e-06 minutes
2023-07-07 10:01:37,112:INFO:SubProcess create_model() called ==================================
2023-07-07 10:01:37,112:INFO:Initializing create_model()
2023-07-07 10:01:37,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:01:37,113:INFO:Checking exceptions
2023-07-07 10:01:37,113:INFO:Importing libraries
2023-07-07 10:01:37,113:INFO:Copying training dataset
2023-07-07 10:01:37,181:INFO:Defining folds
2023-07-07 10:01:37,181:INFO:Declaring metric variables
2023-07-07 10:01:37,186:INFO:Importing untrained model
2023-07-07 10:01:37,194:INFO:Logistic Regression Imported successfully
2023-07-07 10:01:37,204:INFO:Starting cross validation
2023-07-07 10:01:37,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:01,217:INFO:Calculating mean and std
2023-07-07 10:02:01,219:INFO:Creating metrics dataframe
2023-07-07 10:02:01,244:INFO:Uploading results into container
2023-07-07 10:02:01,245:INFO:Uploading model into container now
2023-07-07 10:02:01,245:INFO:_master_model_container: 1
2023-07-07 10:02:01,245:INFO:_display_container: 2
2023-07-07 10:02:01,246:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-07 10:02:01,246:INFO:create_model() successfully completed......................................
2023-07-07 10:02:01,355:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:01,355:INFO:Creating metrics dataframe
2023-07-07 10:02:01,365:INFO:Initializing K Neighbors Classifier
2023-07-07 10:02:01,365:INFO:Total runtime is 0.4042950789133708 minutes
2023-07-07 10:02:01,368:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:01,368:INFO:Initializing create_model()
2023-07-07 10:02:01,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:01,368:INFO:Checking exceptions
2023-07-07 10:02:01,368:INFO:Importing libraries
2023-07-07 10:02:01,368:INFO:Copying training dataset
2023-07-07 10:02:01,423:INFO:Defining folds
2023-07-07 10:02:01,423:INFO:Declaring metric variables
2023-07-07 10:02:01,428:INFO:Importing untrained model
2023-07-07 10:02:01,433:INFO:K Neighbors Classifier Imported successfully
2023-07-07 10:02:01,443:INFO:Starting cross validation
2023-07-07 10:02:01,459:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:17,934:INFO:Calculating mean and std
2023-07-07 10:02:17,935:INFO:Creating metrics dataframe
2023-07-07 10:02:17,957:INFO:Uploading results into container
2023-07-07 10:02:17,958:INFO:Uploading model into container now
2023-07-07 10:02:17,959:INFO:_master_model_container: 2
2023-07-07 10:02:17,959:INFO:_display_container: 2
2023-07-07 10:02:17,959:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-07 10:02:17,959:INFO:create_model() successfully completed......................................
2023-07-07 10:02:18,059:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:18,060:INFO:Creating metrics dataframe
2023-07-07 10:02:18,069:INFO:Initializing Naive Bayes
2023-07-07 10:02:18,069:INFO:Total runtime is 0.6827070554097494 minutes
2023-07-07 10:02:18,073:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:18,073:INFO:Initializing create_model()
2023-07-07 10:02:18,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:18,073:INFO:Checking exceptions
2023-07-07 10:02:18,073:INFO:Importing libraries
2023-07-07 10:02:18,073:INFO:Copying training dataset
2023-07-07 10:02:18,127:INFO:Defining folds
2023-07-07 10:02:18,127:INFO:Declaring metric variables
2023-07-07 10:02:18,132:INFO:Importing untrained model
2023-07-07 10:02:18,137:INFO:Naive Bayes Imported successfully
2023-07-07 10:02:18,146:INFO:Starting cross validation
2023-07-07 10:02:18,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:21,708:INFO:Calculating mean and std
2023-07-07 10:02:21,710:INFO:Creating metrics dataframe
2023-07-07 10:02:21,731:INFO:Uploading results into container
2023-07-07 10:02:21,732:INFO:Uploading model into container now
2023-07-07 10:02:21,732:INFO:_master_model_container: 3
2023-07-07 10:02:21,732:INFO:_display_container: 2
2023-07-07 10:02:21,733:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-07 10:02:21,733:INFO:create_model() successfully completed......................................
2023-07-07 10:02:21,830:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:21,830:INFO:Creating metrics dataframe
2023-07-07 10:02:21,840:INFO:Initializing Decision Tree Classifier
2023-07-07 10:02:21,840:INFO:Total runtime is 0.7455576539039612 minutes
2023-07-07 10:02:21,844:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:21,844:INFO:Initializing create_model()
2023-07-07 10:02:21,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:21,845:INFO:Checking exceptions
2023-07-07 10:02:21,845:INFO:Importing libraries
2023-07-07 10:02:21,845:INFO:Copying training dataset
2023-07-07 10:02:21,893:INFO:Defining folds
2023-07-07 10:02:21,893:INFO:Declaring metric variables
2023-07-07 10:02:21,897:INFO:Importing untrained model
2023-07-07 10:02:21,900:INFO:Decision Tree Classifier Imported successfully
2023-07-07 10:02:21,909:INFO:Starting cross validation
2023-07-07 10:02:21,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:27,080:INFO:Calculating mean and std
2023-07-07 10:02:27,082:INFO:Creating metrics dataframe
2023-07-07 10:02:27,104:INFO:Uploading results into container
2023-07-07 10:02:27,105:INFO:Uploading model into container now
2023-07-07 10:02:27,105:INFO:_master_model_container: 4
2023-07-07 10:02:27,105:INFO:_display_container: 2
2023-07-07 10:02:27,106:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-07-07 10:02:27,106:INFO:create_model() successfully completed......................................
2023-07-07 10:02:27,205:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:27,205:INFO:Creating metrics dataframe
2023-07-07 10:02:27,214:INFO:Initializing SVM - Linear Kernel
2023-07-07 10:02:27,214:INFO:Total runtime is 0.8351228515307109 minutes
2023-07-07 10:02:27,218:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:27,218:INFO:Initializing create_model()
2023-07-07 10:02:27,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:27,218:INFO:Checking exceptions
2023-07-07 10:02:27,218:INFO:Importing libraries
2023-07-07 10:02:27,218:INFO:Copying training dataset
2023-07-07 10:02:27,265:INFO:Defining folds
2023-07-07 10:02:27,265:INFO:Declaring metric variables
2023-07-07 10:02:27,269:INFO:Importing untrained model
2023-07-07 10:02:27,274:INFO:SVM - Linear Kernel Imported successfully
2023-07-07 10:02:27,284:INFO:Starting cross validation
2023-07-07 10:02:27,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:33,125:INFO:Calculating mean and std
2023-07-07 10:02:33,127:INFO:Creating metrics dataframe
2023-07-07 10:02:33,156:INFO:Uploading results into container
2023-07-07 10:02:33,157:INFO:Uploading model into container now
2023-07-07 10:02:33,157:INFO:_master_model_container: 5
2023-07-07 10:02:33,157:INFO:_display_container: 2
2023-07-07 10:02:33,158:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-07 10:02:33,158:INFO:create_model() successfully completed......................................
2023-07-07 10:02:33,265:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:33,265:INFO:Creating metrics dataframe
2023-07-07 10:02:33,276:INFO:Initializing Ridge Classifier
2023-07-07 10:02:33,276:INFO:Total runtime is 0.9361501256624858 minutes
2023-07-07 10:02:33,280:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:33,280:INFO:Initializing create_model()
2023-07-07 10:02:33,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:33,280:INFO:Checking exceptions
2023-07-07 10:02:33,281:INFO:Importing libraries
2023-07-07 10:02:33,281:INFO:Copying training dataset
2023-07-07 10:02:33,333:INFO:Defining folds
2023-07-07 10:02:33,333:INFO:Declaring metric variables
2023-07-07 10:02:33,337:INFO:Importing untrained model
2023-07-07 10:02:33,341:INFO:Ridge Classifier Imported successfully
2023-07-07 10:02:33,349:INFO:Starting cross validation
2023-07-07 10:02:33,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:02:39,047:INFO:Calculating mean and std
2023-07-07 10:02:39,050:INFO:Creating metrics dataframe
2023-07-07 10:02:39,084:INFO:Uploading results into container
2023-07-07 10:02:39,085:INFO:Uploading model into container now
2023-07-07 10:02:39,085:INFO:_master_model_container: 6
2023-07-07 10:02:39,085:INFO:_display_container: 2
2023-07-07 10:02:39,086:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-07-07 10:02:39,086:INFO:create_model() successfully completed......................................
2023-07-07 10:02:39,198:INFO:SubProcess create_model() end ==================================
2023-07-07 10:02:39,198:INFO:Creating metrics dataframe
2023-07-07 10:02:39,211:INFO:Initializing Random Forest Classifier
2023-07-07 10:02:39,211:INFO:Total runtime is 1.0350637952486674 minutes
2023-07-07 10:02:39,216:INFO:SubProcess create_model() called ==================================
2023-07-07 10:02:39,216:INFO:Initializing create_model()
2023-07-07 10:02:39,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:02:39,216:INFO:Checking exceptions
2023-07-07 10:02:39,217:INFO:Importing libraries
2023-07-07 10:02:39,217:INFO:Copying training dataset
2023-07-07 10:02:39,284:INFO:Defining folds
2023-07-07 10:02:39,284:INFO:Declaring metric variables
2023-07-07 10:02:39,289:INFO:Importing untrained model
2023-07-07 10:02:39,294:INFO:Random Forest Classifier Imported successfully
2023-07-07 10:02:39,305:INFO:Starting cross validation
2023-07-07 10:02:39,323:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:03:16,006:INFO:Calculating mean and std
2023-07-07 10:03:16,008:INFO:Creating metrics dataframe
2023-07-07 10:03:16,032:INFO:Uploading results into container
2023-07-07 10:03:16,033:INFO:Uploading model into container now
2023-07-07 10:03:16,033:INFO:_master_model_container: 7
2023-07-07 10:03:16,033:INFO:_display_container: 2
2023-07-07 10:03:16,033:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-07-07 10:03:16,033:INFO:create_model() successfully completed......................................
2023-07-07 10:03:16,142:INFO:SubProcess create_model() end ==================================
2023-07-07 10:03:16,143:INFO:Creating metrics dataframe
2023-07-07 10:03:16,153:INFO:Initializing Quadratic Discriminant Analysis
2023-07-07 10:03:16,153:INFO:Total runtime is 1.6507682800292969 minutes
2023-07-07 10:03:16,157:INFO:SubProcess create_model() called ==================================
2023-07-07 10:03:16,157:INFO:Initializing create_model()
2023-07-07 10:03:16,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:03:16,157:INFO:Checking exceptions
2023-07-07 10:03:16,157:INFO:Importing libraries
2023-07-07 10:03:16,157:INFO:Copying training dataset
2023-07-07 10:03:16,209:INFO:Defining folds
2023-07-07 10:03:16,209:INFO:Declaring metric variables
2023-07-07 10:03:16,213:INFO:Importing untrained model
2023-07-07 10:03:16,216:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-07 10:03:16,226:INFO:Starting cross validation
2023-07-07 10:03:16,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:03:24,998:INFO:Calculating mean and std
2023-07-07 10:03:25,000:INFO:Creating metrics dataframe
2023-07-07 10:03:25,033:INFO:Uploading results into container
2023-07-07 10:03:25,034:INFO:Uploading model into container now
2023-07-07 10:03:25,034:INFO:_master_model_container: 8
2023-07-07 10:03:25,034:INFO:_display_container: 2
2023-07-07 10:03:25,034:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-07 10:03:25,034:INFO:create_model() successfully completed......................................
2023-07-07 10:03:25,139:INFO:SubProcess create_model() end ==================================
2023-07-07 10:03:25,139:INFO:Creating metrics dataframe
2023-07-07 10:03:25,150:INFO:Initializing Ada Boost Classifier
2023-07-07 10:03:25,150:INFO:Total runtime is 1.8007217645645142 minutes
2023-07-07 10:03:25,153:INFO:SubProcess create_model() called ==================================
2023-07-07 10:03:25,154:INFO:Initializing create_model()
2023-07-07 10:03:25,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:03:25,154:INFO:Checking exceptions
2023-07-07 10:03:25,154:INFO:Importing libraries
2023-07-07 10:03:25,154:INFO:Copying training dataset
2023-07-07 10:03:25,209:INFO:Defining folds
2023-07-07 10:03:25,209:INFO:Declaring metric variables
2023-07-07 10:03:25,214:INFO:Importing untrained model
2023-07-07 10:03:25,220:INFO:Ada Boost Classifier Imported successfully
2023-07-07 10:03:25,230:INFO:Starting cross validation
2023-07-07 10:03:25,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:03:54,641:INFO:Calculating mean and std
2023-07-07 10:03:54,643:INFO:Creating metrics dataframe
2023-07-07 10:03:54,670:INFO:Uploading results into container
2023-07-07 10:03:54,671:INFO:Uploading model into container now
2023-07-07 10:03:54,671:INFO:_master_model_container: 9
2023-07-07 10:03:54,671:INFO:_display_container: 2
2023-07-07 10:03:54,671:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-07-07 10:03:54,672:INFO:create_model() successfully completed......................................
2023-07-07 10:03:54,778:INFO:SubProcess create_model() end ==================================
2023-07-07 10:03:54,778:INFO:Creating metrics dataframe
2023-07-07 10:03:54,792:INFO:Initializing Gradient Boosting Classifier
2023-07-07 10:03:54,792:INFO:Total runtime is 2.294744257132212 minutes
2023-07-07 10:03:54,795:INFO:SubProcess create_model() called ==================================
2023-07-07 10:03:54,795:INFO:Initializing create_model()
2023-07-07 10:03:54,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f19b65cc5e0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a0c350610>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:03:54,795:INFO:Checking exceptions
2023-07-07 10:03:54,796:INFO:Importing libraries
2023-07-07 10:03:54,796:INFO:Copying training dataset
2023-07-07 10:03:54,847:INFO:Defining folds
2023-07-07 10:03:54,847:INFO:Declaring metric variables
2023-07-07 10:03:54,851:INFO:Importing untrained model
2023-07-07 10:03:54,856:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:03:54,865:INFO:Starting cross validation
2023-07-07 10:03:54,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:02,756:INFO:PyCaret ClassificationExperiment
2023-07-07 10:05:02,756:INFO:Logging name: Diabaties_detection_02
2023-07-07 10:05:02,756:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-07 10:05:02,756:INFO:version 3.0.4
2023-07-07 10:05:02,756:INFO:Initializing setup()
2023-07-07 10:05:02,757:INFO:self.USI: 0ef8
2023-07-07 10:05:02,757:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'gpu_n_jobs_param', 'logging_param', 'pipeline', 'X', 'fold_groups_param', 'y', 'USI', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'seed', 'target_param', 'html_param', 'y_test', 'is_multiclass', 'log_plots_param', 'idx', 'y_train', 'fold_generator', 'data', 'memory', '_ml_usecase', 'exp_id', 'fix_imbalance', 'X_test', 'X_train'}
2023-07-07 10:05:02,757:INFO:Checking environment
2023-07-07 10:05:02,757:INFO:python_version: 3.9.1
2023-07-07 10:05:02,757:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-07 10:05:02,757:INFO:machine: x86_64
2023-07-07 10:05:02,757:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:05:02,757:INFO:Memory: svmem(total=8260853760, available=4828680192, percent=41.5, used=3123875840, free=1605447680, active=3417698304, inactive=2814070784, buffers=174899200, cached=3356631040, shared=73728, slab=300019712)
2023-07-07 10:05:02,757:INFO:Physical Core: 6
2023-07-07 10:05:02,757:INFO:Logical Core: 12
2023-07-07 10:05:02,757:INFO:Checking libraries
2023-07-07 10:05:02,758:INFO:System:
2023-07-07 10:05:02,758:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-07 10:05:02,758:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-07 10:05:02,758:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:05:02,758:INFO:PyCaret required dependencies:
2023-07-07 10:05:02,758:INFO:                 pip: 20.3.1
2023-07-07 10:05:02,758:INFO:          setuptools: 51.0.0.post20201207
2023-07-07 10:05:02,758:INFO:             pycaret: 3.0.4
2023-07-07 10:05:02,758:INFO:             IPython: 7.22.0
2023-07-07 10:05:02,758:INFO:          ipywidgets: 8.0.7
2023-07-07 10:05:02,758:INFO:                tqdm: 4.65.0
2023-07-07 10:05:02,758:INFO:               numpy: 1.22.4
2023-07-07 10:05:02,758:INFO:              pandas: 1.5.3
2023-07-07 10:05:02,758:INFO:              jinja2: 3.0.1
2023-07-07 10:05:02,758:INFO:               scipy: 1.7.1
2023-07-07 10:05:02,758:INFO:              joblib: 1.3.1
2023-07-07 10:05:02,758:INFO:             sklearn: 1.2.2
2023-07-07 10:05:02,758:INFO:                pyod: 1.1.0
2023-07-07 10:05:02,758:INFO:            imblearn: 0.10.1
2023-07-07 10:05:02,758:INFO:   category_encoders: 2.6.1
2023-07-07 10:05:02,758:INFO:            lightgbm: 3.3.5
2023-07-07 10:05:02,758:INFO:               numba: 0.57.1
2023-07-07 10:05:02,758:INFO:            requests: 2.31.0
2023-07-07 10:05:02,759:INFO:          matplotlib: 3.4.3
2023-07-07 10:05:02,759:INFO:          scikitplot: 0.3.7
2023-07-07 10:05:02,759:INFO:         yellowbrick: 1.5
2023-07-07 10:05:02,759:INFO:              plotly: 5.15.0
2023-07-07 10:05:02,759:INFO:    plotly-resampler: Not installed
2023-07-07 10:05:02,759:INFO:             kaleido: 0.2.1
2023-07-07 10:05:02,759:INFO:           schemdraw: 0.15
2023-07-07 10:05:02,759:INFO:         statsmodels: 0.14.0
2023-07-07 10:05:02,759:INFO:              sktime: 0.20.0
2023-07-07 10:05:02,759:INFO:               tbats: 1.1.3
2023-07-07 10:05:02,759:INFO:            pmdarima: 2.0.3
2023-07-07 10:05:02,759:INFO:              psutil: 5.9.5
2023-07-07 10:05:02,759:INFO:          markupsafe: 2.0.1
2023-07-07 10:05:02,759:INFO:             pickle5: Not installed
2023-07-07 10:05:02,759:INFO:         cloudpickle: 2.2.1
2023-07-07 10:05:02,759:INFO:         deprecation: 2.1.0
2023-07-07 10:05:02,759:INFO:              xxhash: 3.2.0
2023-07-07 10:05:02,759:INFO:           wurlitzer: 3.0.3
2023-07-07 10:05:02,759:INFO:PyCaret optional dependencies:
2023-07-07 10:05:02,759:INFO:                shap: Not installed
2023-07-07 10:05:02,759:INFO:           interpret: Not installed
2023-07-07 10:05:02,759:INFO:                umap: Not installed
2023-07-07 10:05:02,760:INFO:    pandas_profiling: 3.6.6
2023-07-07 10:05:02,760:INFO:  explainerdashboard: Not installed
2023-07-07 10:05:02,760:INFO:             autoviz: Not installed
2023-07-07 10:05:02,760:INFO:           fairlearn: Not installed
2023-07-07 10:05:02,760:INFO:          deepchecks: Not installed
2023-07-07 10:05:02,760:INFO:             xgboost: Not installed
2023-07-07 10:05:02,760:INFO:            catboost: Not installed
2023-07-07 10:05:02,760:INFO:              kmodes: Not installed
2023-07-07 10:05:02,760:INFO:             mlxtend: Not installed
2023-07-07 10:05:02,760:INFO:       statsforecast: Not installed
2023-07-07 10:05:02,760:INFO:        tune_sklearn: Not installed
2023-07-07 10:05:02,760:INFO:                 ray: Not installed
2023-07-07 10:05:02,760:INFO:            hyperopt: Not installed
2023-07-07 10:05:02,760:INFO:              optuna: Not installed
2023-07-07 10:05:02,760:INFO:               skopt: Not installed
2023-07-07 10:05:02,760:INFO:              mlflow: 2.4.1
2023-07-07 10:05:02,760:INFO:              gradio: Not installed
2023-07-07 10:05:02,760:INFO:             fastapi: Not installed
2023-07-07 10:05:02,760:INFO:             uvicorn: Not installed
2023-07-07 10:05:02,760:INFO:              m2cgen: Not installed
2023-07-07 10:05:02,760:INFO:           evidently: Not installed
2023-07-07 10:05:02,760:INFO:               fugue: Not installed
2023-07-07 10:05:02,760:INFO:           streamlit: Not installed
2023-07-07 10:05:02,760:INFO:             prophet: Not installed
2023-07-07 10:05:02,760:INFO:None
2023-07-07 10:05:02,760:INFO:Set up GPU usage.
2023-07-07 10:05:02,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:02,760:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-07 10:05:02,760:INFO:Set up data.
2023-07-07 10:05:03,449:INFO:Set up train/test split.
2023-07-07 10:05:03,659:INFO:Set up index.
2023-07-07 10:05:03,661:INFO:Set up folding strategy.
2023-07-07 10:05:03,662:INFO:Assigning column types.
2023-07-07 10:05:03,691:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-07 10:05:03,692:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,744:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:05:03,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:05:03,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,780:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:03,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:03,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:05:03,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:05:03,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:03,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:03,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:03,977:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-07 10:05:03,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:05:04,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:05:04,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,217:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-07 10:05:04,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,392:INFO:Preparing preprocessing pipeline...
2023-07-07 10:05:04,398:INFO:Set up simple imputation.
2023-07-07 10:05:04,398:INFO:Set up feature normalization.
2023-07-07 10:05:04,398:INFO:Set up feature selection.
2023-07-07 10:05:04,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:04,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:04,503:INFO:Set up column name cleaning.
2023-07-07 10:05:06,361:INFO:Finished creating preprocessing pipeline.
2023-07-07 10:05:06,371:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:05:06,371:INFO:Creating final display dataframe.
2023-07-07 10:05:06,849:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (198929, 32)
4        Transformed data shape             (198929, 6)
5   Transformed train set shape             (139250, 6)
6    Transformed test set shape              (59679, 6)
7               Ignore features                       4
8              Numeric features                       2
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15            Feature selection                    True
16     Feature selection method                 classic
17  Feature selection estimator                lightgbm
18  Number of features selected                     0.2
19               Fold Generator         StratifiedKFold
20                  Fold Number                      10
21                     CPU Jobs                      -1
22                      Use GPU                    True
23               Log Experiment            MlflowLogger
24              Experiment Name  Diabaties_detection_02
25                          USI                    0ef8
2023-07-07 10:05:06,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:06,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:06,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:06,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:07,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:07,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:05:07,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:07,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:05:07,021:INFO:Logging experiment in loggers
2023-07-07 10:05:07,037:INFO:SubProcess save_model() called ==================================
2023-07-07 10:05:07,057:INFO:Initializing save_model()
2023-07-07 10:05:07,057:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmp752q0xvq/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-07 10:05:07,057:INFO:Adding model into prep_pipe
2023-07-07 10:05:07,057:WARNING:Only Model saved as it was a pipeline.
2023-07-07 10:05:07,064:INFO:/tmp/tmp752q0xvq/Transformation Pipeline.pkl saved in current working directory
2023-07-07 10:05:07,075:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:05:07,075:INFO:save_model() successfully completed......................................
2023-07-07 10:05:07,215:INFO:SubProcess save_model() end ==================================
2023-07-07 10:05:07,218:INFO:setup() successfully completed in 4.29s...............
2023-07-07 10:05:10,010:INFO:Initializing compare_models()
2023-07-07 10:05:10,010:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-07 10:05:10,010:INFO:Checking exceptions
2023-07-07 10:05:10,035:INFO:Preparing display monitor
2023-07-07 10:05:10,081:INFO:Initializing Logistic Regression
2023-07-07 10:05:10,081:INFO:Total runtime is 5.106131235758464e-06 minutes
2023-07-07 10:05:10,086:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:10,087:INFO:Initializing create_model()
2023-07-07 10:05:10,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:10,087:INFO:Checking exceptions
2023-07-07 10:05:10,087:INFO:Importing libraries
2023-07-07 10:05:10,088:INFO:Copying training dataset
2023-07-07 10:05:10,139:INFO:Defining folds
2023-07-07 10:05:10,140:INFO:Declaring metric variables
2023-07-07 10:05:10,144:INFO:Importing untrained model
2023-07-07 10:05:10,148:INFO:Logistic Regression Imported successfully
2023-07-07 10:05:10,162:INFO:Starting cross validation
2023-07-07 10:05:10,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:29,865:INFO:Calculating mean and std
2023-07-07 10:05:29,868:INFO:Creating metrics dataframe
2023-07-07 10:05:29,903:INFO:Uploading results into container
2023-07-07 10:05:29,903:INFO:Uploading model into container now
2023-07-07 10:05:29,904:INFO:_master_model_container: 1
2023-07-07 10:05:29,904:INFO:_display_container: 2
2023-07-07 10:05:29,904:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-07 10:05:29,905:INFO:create_model() successfully completed......................................
2023-07-07 10:05:30,012:INFO:SubProcess create_model() end ==================================
2023-07-07 10:05:30,012:INFO:Creating metrics dataframe
2023-07-07 10:05:30,021:INFO:Initializing K Neighbors Classifier
2023-07-07 10:05:30,021:INFO:Total runtime is 0.3323402206103007 minutes
2023-07-07 10:05:30,025:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:30,025:INFO:Initializing create_model()
2023-07-07 10:05:30,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:30,025:INFO:Checking exceptions
2023-07-07 10:05:30,025:INFO:Importing libraries
2023-07-07 10:05:30,026:INFO:Copying training dataset
2023-07-07 10:05:30,076:INFO:Defining folds
2023-07-07 10:05:30,076:INFO:Declaring metric variables
2023-07-07 10:05:30,081:INFO:Importing untrained model
2023-07-07 10:05:30,087:INFO:K Neighbors Classifier Imported successfully
2023-07-07 10:05:30,098:INFO:Starting cross validation
2023-07-07 10:05:30,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:43,564:INFO:Calculating mean and std
2023-07-07 10:05:43,566:INFO:Creating metrics dataframe
2023-07-07 10:05:43,596:INFO:Uploading results into container
2023-07-07 10:05:43,596:INFO:Uploading model into container now
2023-07-07 10:05:43,597:INFO:_master_model_container: 2
2023-07-07 10:05:43,597:INFO:_display_container: 2
2023-07-07 10:05:43,597:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-07 10:05:43,597:INFO:create_model() successfully completed......................................
2023-07-07 10:05:43,699:INFO:SubProcess create_model() end ==================================
2023-07-07 10:05:43,699:INFO:Creating metrics dataframe
2023-07-07 10:05:43,708:INFO:Initializing Naive Bayes
2023-07-07 10:05:43,708:INFO:Total runtime is 0.5604546030362447 minutes
2023-07-07 10:05:43,711:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:43,711:INFO:Initializing create_model()
2023-07-07 10:05:43,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:43,712:INFO:Checking exceptions
2023-07-07 10:05:43,712:INFO:Importing libraries
2023-07-07 10:05:43,712:INFO:Copying training dataset
2023-07-07 10:05:43,761:INFO:Defining folds
2023-07-07 10:05:43,761:INFO:Declaring metric variables
2023-07-07 10:05:43,765:INFO:Importing untrained model
2023-07-07 10:05:43,769:INFO:Naive Bayes Imported successfully
2023-07-07 10:05:43,779:INFO:Starting cross validation
2023-07-07 10:05:43,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:47,447:INFO:Calculating mean and std
2023-07-07 10:05:47,449:INFO:Creating metrics dataframe
2023-07-07 10:05:47,477:INFO:Uploading results into container
2023-07-07 10:05:47,477:INFO:Uploading model into container now
2023-07-07 10:05:47,478:INFO:_master_model_container: 3
2023-07-07 10:05:47,478:INFO:_display_container: 2
2023-07-07 10:05:47,478:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-07 10:05:47,478:INFO:create_model() successfully completed......................................
2023-07-07 10:05:47,580:INFO:SubProcess create_model() end ==================================
2023-07-07 10:05:47,580:INFO:Creating metrics dataframe
2023-07-07 10:05:47,590:INFO:Initializing Decision Tree Classifier
2023-07-07 10:05:47,590:INFO:Total runtime is 0.6251606225967408 minutes
2023-07-07 10:05:47,594:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:47,594:INFO:Initializing create_model()
2023-07-07 10:05:47,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:47,594:INFO:Checking exceptions
2023-07-07 10:05:47,595:INFO:Importing libraries
2023-07-07 10:05:47,595:INFO:Copying training dataset
2023-07-07 10:05:47,648:INFO:Defining folds
2023-07-07 10:05:47,649:INFO:Declaring metric variables
2023-07-07 10:05:47,653:INFO:Importing untrained model
2023-07-07 10:05:47,657:INFO:Decision Tree Classifier Imported successfully
2023-07-07 10:05:47,667:INFO:Starting cross validation
2023-07-07 10:05:47,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:52,868:INFO:Calculating mean and std
2023-07-07 10:05:52,870:INFO:Creating metrics dataframe
2023-07-07 10:05:52,900:INFO:Uploading results into container
2023-07-07 10:05:52,900:INFO:Uploading model into container now
2023-07-07 10:05:52,901:INFO:_master_model_container: 4
2023-07-07 10:05:52,901:INFO:_display_container: 2
2023-07-07 10:05:52,901:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-07-07 10:05:52,901:INFO:create_model() successfully completed......................................
2023-07-07 10:05:53,001:INFO:SubProcess create_model() end ==================================
2023-07-07 10:05:53,001:INFO:Creating metrics dataframe
2023-07-07 10:05:53,011:INFO:Initializing SVM - Linear Kernel
2023-07-07 10:05:53,011:INFO:Total runtime is 0.7155013839403789 minutes
2023-07-07 10:05:53,014:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:53,014:INFO:Initializing create_model()
2023-07-07 10:05:53,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:53,015:INFO:Checking exceptions
2023-07-07 10:05:53,015:INFO:Importing libraries
2023-07-07 10:05:53,015:INFO:Copying training dataset
2023-07-07 10:05:53,065:INFO:Defining folds
2023-07-07 10:05:53,065:INFO:Declaring metric variables
2023-07-07 10:05:53,070:INFO:Importing untrained model
2023-07-07 10:05:53,075:INFO:SVM - Linear Kernel Imported successfully
2023-07-07 10:05:53,085:INFO:Starting cross validation
2023-07-07 10:05:53,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:05:58,530:INFO:Calculating mean and std
2023-07-07 10:05:58,532:INFO:Creating metrics dataframe
2023-07-07 10:05:58,569:INFO:Uploading results into container
2023-07-07 10:05:58,570:INFO:Uploading model into container now
2023-07-07 10:05:58,570:INFO:_master_model_container: 5
2023-07-07 10:05:58,571:INFO:_display_container: 2
2023-07-07 10:05:58,571:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-07 10:05:58,571:INFO:create_model() successfully completed......................................
2023-07-07 10:05:58,675:INFO:SubProcess create_model() end ==================================
2023-07-07 10:05:58,675:INFO:Creating metrics dataframe
2023-07-07 10:05:58,685:INFO:Initializing Ridge Classifier
2023-07-07 10:05:58,685:INFO:Total runtime is 0.8100780407587688 minutes
2023-07-07 10:05:58,689:INFO:SubProcess create_model() called ==================================
2023-07-07 10:05:58,689:INFO:Initializing create_model()
2023-07-07 10:05:58,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:05:58,689:INFO:Checking exceptions
2023-07-07 10:05:58,690:INFO:Importing libraries
2023-07-07 10:05:58,690:INFO:Copying training dataset
2023-07-07 10:05:58,736:INFO:Defining folds
2023-07-07 10:05:58,737:INFO:Declaring metric variables
2023-07-07 10:05:58,741:INFO:Importing untrained model
2023-07-07 10:05:58,744:INFO:Ridge Classifier Imported successfully
2023-07-07 10:05:58,754:INFO:Starting cross validation
2023-07-07 10:05:58,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:06:03,263:INFO:Calculating mean and std
2023-07-07 10:06:03,267:INFO:Creating metrics dataframe
2023-07-07 10:06:03,301:INFO:Uploading results into container
2023-07-07 10:06:03,301:INFO:Uploading model into container now
2023-07-07 10:06:03,302:INFO:_master_model_container: 6
2023-07-07 10:06:03,302:INFO:_display_container: 2
2023-07-07 10:06:03,302:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-07-07 10:06:03,302:INFO:create_model() successfully completed......................................
2023-07-07 10:06:03,410:INFO:SubProcess create_model() end ==================================
2023-07-07 10:06:03,411:INFO:Creating metrics dataframe
2023-07-07 10:06:03,421:INFO:Initializing Random Forest Classifier
2023-07-07 10:06:03,422:INFO:Total runtime is 0.8890129327774048 minutes
2023-07-07 10:06:03,425:INFO:SubProcess create_model() called ==================================
2023-07-07 10:06:03,425:INFO:Initializing create_model()
2023-07-07 10:06:03,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:06:03,426:INFO:Checking exceptions
2023-07-07 10:06:03,426:INFO:Importing libraries
2023-07-07 10:06:03,426:INFO:Copying training dataset
2023-07-07 10:06:03,477:INFO:Defining folds
2023-07-07 10:06:03,477:INFO:Declaring metric variables
2023-07-07 10:06:03,481:INFO:Importing untrained model
2023-07-07 10:06:03,486:INFO:Random Forest Classifier Imported successfully
2023-07-07 10:06:03,495:INFO:Starting cross validation
2023-07-07 10:06:03,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:06:34,043:INFO:Calculating mean and std
2023-07-07 10:06:34,046:INFO:Creating metrics dataframe
2023-07-07 10:06:34,079:INFO:Uploading results into container
2023-07-07 10:06:34,080:INFO:Uploading model into container now
2023-07-07 10:06:34,080:INFO:_master_model_container: 7
2023-07-07 10:06:34,080:INFO:_display_container: 2
2023-07-07 10:06:34,080:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-07-07 10:06:34,080:INFO:create_model() successfully completed......................................
2023-07-07 10:06:34,183:INFO:SubProcess create_model() end ==================================
2023-07-07 10:06:34,183:INFO:Creating metrics dataframe
2023-07-07 10:06:34,196:INFO:Initializing Quadratic Discriminant Analysis
2023-07-07 10:06:34,196:INFO:Total runtime is 1.4019198894500733 minutes
2023-07-07 10:06:34,200:INFO:SubProcess create_model() called ==================================
2023-07-07 10:06:34,200:INFO:Initializing create_model()
2023-07-07 10:06:34,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:06:34,200:INFO:Checking exceptions
2023-07-07 10:06:34,200:INFO:Importing libraries
2023-07-07 10:06:34,200:INFO:Copying training dataset
2023-07-07 10:06:34,247:INFO:Defining folds
2023-07-07 10:06:34,247:INFO:Declaring metric variables
2023-07-07 10:06:34,252:INFO:Importing untrained model
2023-07-07 10:06:34,257:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-07 10:06:34,266:INFO:Starting cross validation
2023-07-07 10:06:34,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:06:40,416:INFO:Calculating mean and std
2023-07-07 10:06:40,418:INFO:Creating metrics dataframe
2023-07-07 10:06:40,451:INFO:Uploading results into container
2023-07-07 10:06:40,452:INFO:Uploading model into container now
2023-07-07 10:06:40,452:INFO:_master_model_container: 8
2023-07-07 10:06:40,453:INFO:_display_container: 2
2023-07-07 10:06:40,453:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-07 10:06:40,453:INFO:create_model() successfully completed......................................
2023-07-07 10:06:40,561:INFO:SubProcess create_model() end ==================================
2023-07-07 10:06:40,561:INFO:Creating metrics dataframe
2023-07-07 10:06:40,572:INFO:Initializing Ada Boost Classifier
2023-07-07 10:06:40,572:INFO:Total runtime is 1.5081871430079143 minutes
2023-07-07 10:06:40,575:INFO:SubProcess create_model() called ==================================
2023-07-07 10:06:40,575:INFO:Initializing create_model()
2023-07-07 10:06:40,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:06:40,576:INFO:Checking exceptions
2023-07-07 10:06:40,576:INFO:Importing libraries
2023-07-07 10:06:40,576:INFO:Copying training dataset
2023-07-07 10:06:40,654:INFO:Defining folds
2023-07-07 10:06:40,654:INFO:Declaring metric variables
2023-07-07 10:06:40,660:INFO:Importing untrained model
2023-07-07 10:06:40,665:INFO:Ada Boost Classifier Imported successfully
2023-07-07 10:06:40,679:INFO:Starting cross validation
2023-07-07 10:06:40,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:07:06,683:INFO:Calculating mean and std
2023-07-07 10:07:06,684:INFO:Creating metrics dataframe
2023-07-07 10:07:06,718:INFO:Uploading results into container
2023-07-07 10:07:06,718:INFO:Uploading model into container now
2023-07-07 10:07:06,719:INFO:_master_model_container: 9
2023-07-07 10:07:06,719:INFO:_display_container: 2
2023-07-07 10:07:06,719:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-07-07 10:07:06,719:INFO:create_model() successfully completed......................................
2023-07-07 10:07:06,825:INFO:SubProcess create_model() end ==================================
2023-07-07 10:07:06,825:INFO:Creating metrics dataframe
2023-07-07 10:07:06,838:INFO:Initializing Gradient Boosting Classifier
2023-07-07 10:07:06,838:INFO:Total runtime is 1.9459500590960186 minutes
2023-07-07 10:07:06,841:INFO:SubProcess create_model() called ==================================
2023-07-07 10:07:06,841:INFO:Initializing create_model()
2023-07-07 10:07:06,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:07:06,842:INFO:Checking exceptions
2023-07-07 10:07:06,842:INFO:Importing libraries
2023-07-07 10:07:06,842:INFO:Copying training dataset
2023-07-07 10:07:06,894:INFO:Defining folds
2023-07-07 10:07:06,894:INFO:Declaring metric variables
2023-07-07 10:07:06,901:INFO:Importing untrained model
2023-07-07 10:07:06,906:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:07:06,916:INFO:Starting cross validation
2023-07-07 10:07:06,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:08:05,694:INFO:Calculating mean and std
2023-07-07 10:08:05,696:INFO:Creating metrics dataframe
2023-07-07 10:08:05,729:INFO:Uploading results into container
2023-07-07 10:08:05,729:INFO:Uploading model into container now
2023-07-07 10:08:05,730:INFO:_master_model_container: 10
2023-07-07 10:08:05,730:INFO:_display_container: 2
2023-07-07 10:08:05,730:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:08:05,730:INFO:create_model() successfully completed......................................
2023-07-07 10:08:05,839:INFO:SubProcess create_model() end ==================================
2023-07-07 10:08:05,839:INFO:Creating metrics dataframe
2023-07-07 10:08:05,850:INFO:Initializing Linear Discriminant Analysis
2023-07-07 10:08:05,850:INFO:Total runtime is 2.929492473602295 minutes
2023-07-07 10:08:05,854:INFO:SubProcess create_model() called ==================================
2023-07-07 10:08:05,854:INFO:Initializing create_model()
2023-07-07 10:08:05,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:08:05,854:INFO:Checking exceptions
2023-07-07 10:08:05,854:INFO:Importing libraries
2023-07-07 10:08:05,854:INFO:Copying training dataset
2023-07-07 10:08:05,898:INFO:Defining folds
2023-07-07 10:08:05,898:INFO:Declaring metric variables
2023-07-07 10:08:05,902:INFO:Importing untrained model
2023-07-07 10:08:05,906:INFO:Linear Discriminant Analysis Imported successfully
2023-07-07 10:08:05,915:INFO:Starting cross validation
2023-07-07 10:08:05,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:08:13,024:INFO:Calculating mean and std
2023-07-07 10:08:13,026:INFO:Creating metrics dataframe
2023-07-07 10:08:13,060:INFO:Uploading results into container
2023-07-07 10:08:13,060:INFO:Uploading model into container now
2023-07-07 10:08:13,061:INFO:_master_model_container: 11
2023-07-07 10:08:13,061:INFO:_display_container: 2
2023-07-07 10:08:13,061:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-07 10:08:13,061:INFO:create_model() successfully completed......................................
2023-07-07 10:08:13,169:INFO:SubProcess create_model() end ==================================
2023-07-07 10:08:13,170:INFO:Creating metrics dataframe
2023-07-07 10:08:13,181:INFO:Initializing Extra Trees Classifier
2023-07-07 10:08:13,181:INFO:Total runtime is 3.0516698320706683 minutes
2023-07-07 10:08:13,184:INFO:SubProcess create_model() called ==================================
2023-07-07 10:08:13,184:INFO:Initializing create_model()
2023-07-07 10:08:13,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:08:13,184:INFO:Checking exceptions
2023-07-07 10:08:13,184:INFO:Importing libraries
2023-07-07 10:08:13,185:INFO:Copying training dataset
2023-07-07 10:08:13,232:INFO:Defining folds
2023-07-07 10:08:13,232:INFO:Declaring metric variables
2023-07-07 10:08:13,237:INFO:Importing untrained model
2023-07-07 10:08:13,241:INFO:Extra Trees Classifier Imported successfully
2023-07-07 10:08:13,251:INFO:Starting cross validation
2023-07-07 10:08:13,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:08:42,721:INFO:Calculating mean and std
2023-07-07 10:08:42,723:INFO:Creating metrics dataframe
2023-07-07 10:08:42,758:INFO:Uploading results into container
2023-07-07 10:08:42,759:INFO:Uploading model into container now
2023-07-07 10:08:42,759:INFO:_master_model_container: 12
2023-07-07 10:08:42,760:INFO:_display_container: 2
2023-07-07 10:08:42,760:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-07-07 10:08:42,760:INFO:create_model() successfully completed......................................
2023-07-07 10:08:42,870:INFO:SubProcess create_model() end ==================================
2023-07-07 10:08:42,870:INFO:Creating metrics dataframe
2023-07-07 10:08:42,882:INFO:Initializing Light Gradient Boosting Machine
2023-07-07 10:08:42,882:INFO:Total runtime is 3.5466943740844723 minutes
2023-07-07 10:08:42,886:INFO:SubProcess create_model() called ==================================
2023-07-07 10:08:42,886:INFO:Initializing create_model()
2023-07-07 10:08:42,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:08:42,886:INFO:Checking exceptions
2023-07-07 10:08:42,886:INFO:Importing libraries
2023-07-07 10:08:42,887:INFO:Copying training dataset
2023-07-07 10:08:42,934:INFO:Defining folds
2023-07-07 10:08:42,934:INFO:Declaring metric variables
2023-07-07 10:08:42,938:INFO:Importing untrained model
2023-07-07 10:08:42,943:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-07 10:08:42,953:INFO:Starting cross validation
2023-07-07 10:08:42,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:08:54,953:INFO:Calculating mean and std
2023-07-07 10:08:54,955:INFO:Creating metrics dataframe
2023-07-07 10:08:54,993:INFO:Uploading results into container
2023-07-07 10:08:54,994:INFO:Uploading model into container now
2023-07-07 10:08:54,994:INFO:_master_model_container: 13
2023-07-07 10:08:54,994:INFO:_display_container: 2
2023-07-07 10:08:54,995:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-07 10:08:54,995:INFO:create_model() successfully completed......................................
2023-07-07 10:08:55,102:INFO:SubProcess create_model() end ==================================
2023-07-07 10:08:55,102:INFO:Creating metrics dataframe
2023-07-07 10:08:55,115:INFO:Initializing Dummy Classifier
2023-07-07 10:08:55,115:INFO:Total runtime is 3.750566395123799 minutes
2023-07-07 10:08:55,119:INFO:SubProcess create_model() called ==================================
2023-07-07 10:08:55,119:INFO:Initializing create_model()
2023-07-07 10:08:55,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a79dd7790>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:08:55,119:INFO:Checking exceptions
2023-07-07 10:08:55,119:INFO:Importing libraries
2023-07-07 10:08:55,120:INFO:Copying training dataset
2023-07-07 10:08:55,170:INFO:Defining folds
2023-07-07 10:08:55,170:INFO:Declaring metric variables
2023-07-07 10:08:55,174:INFO:Importing untrained model
2023-07-07 10:08:55,179:INFO:Dummy Classifier Imported successfully
2023-07-07 10:08:55,190:INFO:Starting cross validation
2023-07-07 10:08:55,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:08:58,586:INFO:Calculating mean and std
2023-07-07 10:08:58,588:INFO:Creating metrics dataframe
2023-07-07 10:08:58,630:INFO:Uploading results into container
2023-07-07 10:08:58,631:INFO:Uploading model into container now
2023-07-07 10:08:58,631:INFO:_master_model_container: 14
2023-07-07 10:08:58,631:INFO:_display_container: 2
2023-07-07 10:08:58,631:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-07-07 10:08:58,631:INFO:create_model() successfully completed......................................
2023-07-07 10:08:58,735:INFO:SubProcess create_model() end ==================================
2023-07-07 10:08:58,735:INFO:Creating metrics dataframe
2023-07-07 10:08:58,757:INFO:Initializing create_model()
2023-07-07 10:08:58,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:08:58,758:INFO:Checking exceptions
2023-07-07 10:08:58,760:INFO:Importing libraries
2023-07-07 10:08:58,761:INFO:Copying training dataset
2023-07-07 10:08:58,806:INFO:Defining folds
2023-07-07 10:08:58,806:INFO:Declaring metric variables
2023-07-07 10:08:58,806:INFO:Importing untrained model
2023-07-07 10:08:58,806:INFO:Declaring custom model
2023-07-07 10:08:58,807:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:08:58,813:INFO:Cross validation set to False
2023-07-07 10:08:58,813:INFO:Fitting Model
2023-07-07 10:09:05,390:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:09:05,390:INFO:create_model() successfully completed......................................
2023-07-07 10:09:05,495:INFO:Creating Dashboard logs
2023-07-07 10:09:05,500:INFO:Model: Gradient Boosting Classifier
2023-07-07 10:09:05,511:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:09:05,599:INFO:Initializing predict_model()
2023-07-07 10:09:05,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c3e4e20>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f1a79a30e50>)
2023-07-07 10:09:05,599:INFO:Checking exceptions
2023-07-07 10:09:05,599:INFO:Preloading libraries
2023-07-07 10:09:06,776:INFO:Creating Dashboard logs
2023-07-07 10:09:06,781:INFO:Model: Light Gradient Boosting Machine
2023-07-07 10:09:06,795:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-07-07 10:09:06,978:INFO:Creating Dashboard logs
2023-07-07 10:09:06,981:INFO:Model: Ada Boost Classifier
2023-07-07 10:09:06,991:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-07-07 10:09:07,160:INFO:Creating Dashboard logs
2023-07-07 10:09:07,163:INFO:Model: Logistic Regression
2023-07-07 10:09:07,174:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-07-07 10:09:07,343:INFO:Creating Dashboard logs
2023-07-07 10:09:07,348:INFO:Model: Linear Discriminant Analysis
2023-07-07 10:09:07,358:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-07-07 10:09:07,530:INFO:Creating Dashboard logs
2023-07-07 10:09:07,534:INFO:Model: SVM - Linear Kernel
2023-07-07 10:09:07,548:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:09:07,741:INFO:Creating Dashboard logs
2023-07-07 10:09:07,744:INFO:Model: Ridge Classifier
2023-07-07 10:09:07,755:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-07-07 10:09:07,933:INFO:Creating Dashboard logs
2023-07-07 10:09:07,937:INFO:Model: Dummy Classifier
2023-07-07 10:09:07,946:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-07-07 10:09:08,125:INFO:Creating Dashboard logs
2023-07-07 10:09:08,128:INFO:Model: Extra Trees Classifier
2023-07-07 10:09:08,141:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-07-07 10:09:08,325:INFO:Creating Dashboard logs
2023-07-07 10:09:08,329:INFO:Model: Random Forest Classifier
2023-07-07 10:09:08,338:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-07-07 10:09:08,511:INFO:Creating Dashboard logs
2023-07-07 10:09:08,514:INFO:Model: K Neighbors Classifier
2023-07-07 10:09:08,525:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-07-07 10:09:08,714:INFO:Creating Dashboard logs
2023-07-07 10:09:08,717:INFO:Model: Decision Tree Classifier
2023-07-07 10:09:08,729:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-07-07 10:09:08,919:INFO:Creating Dashboard logs
2023-07-07 10:09:08,923:INFO:Model: Quadratic Discriminant Analysis
2023-07-07 10:09:08,938:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-07-07 10:09:09,128:INFO:Creating Dashboard logs
2023-07-07 10:09:09,131:INFO:Model: Naive Bayes
2023-07-07 10:09:09,142:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-07-07 10:09:09,334:INFO:_master_model_container: 14
2023-07-07 10:09:09,334:INFO:_display_container: 2
2023-07-07 10:09:09,334:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:09:09,334:INFO:compare_models() successfully completed......................................
2023-07-07 10:13:59,831:INFO:PyCaret ClassificationExperiment
2023-07-07 10:13:59,831:INFO:Logging name: Diabaties_detection_03
2023-07-07 10:13:59,831:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-07-07 10:13:59,831:INFO:version 3.0.4
2023-07-07 10:13:59,831:INFO:Initializing setup()
2023-07-07 10:13:59,831:INFO:self.USI: 6e29
2023-07-07 10:13:59,831:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'gpu_n_jobs_param', 'logging_param', 'pipeline', 'X', 'fold_groups_param', 'y', 'USI', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'seed', 'target_param', 'html_param', 'y_test', 'is_multiclass', 'log_plots_param', 'idx', 'y_train', 'fold_generator', 'data', 'memory', '_ml_usecase', 'exp_id', 'fix_imbalance', 'X_test', 'X_train'}
2023-07-07 10:13:59,831:INFO:Checking environment
2023-07-07 10:13:59,832:INFO:python_version: 3.9.1
2023-07-07 10:13:59,832:INFO:python_build: ('default', 'Dec 11 2020 14:32:07')
2023-07-07 10:13:59,832:INFO:machine: x86_64
2023-07-07 10:13:59,832:INFO:platform: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:13:59,832:INFO:Memory: svmem(total=8260853760, available=4681539584, percent=43.3, used=3270774784, free=768917504, active=3326824448, inactive=3727564800, buffers=176898048, cached=4044263424, shared=49152, slab=306724864)
2023-07-07 10:13:59,833:INFO:Physical Core: 6
2023-07-07 10:13:59,833:INFO:Logical Core: 12
2023-07-07 10:13:59,833:INFO:Checking libraries
2023-07-07 10:13:59,833:INFO:System:
2023-07-07 10:13:59,833:INFO:    python: 3.9.1 (default, Dec 11 2020, 14:32:07)  [GCC 7.3.0]
2023-07-07 10:13:59,833:INFO:executable: /home/gops/miniconda3/bin/python
2023-07-07 10:13:59,833:INFO:   machine: Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.24
2023-07-07 10:13:59,833:INFO:PyCaret required dependencies:
2023-07-07 10:13:59,834:INFO:                 pip: 20.3.1
2023-07-07 10:13:59,834:INFO:          setuptools: 51.0.0.post20201207
2023-07-07 10:13:59,834:INFO:             pycaret: 3.0.4
2023-07-07 10:13:59,834:INFO:             IPython: 7.22.0
2023-07-07 10:13:59,834:INFO:          ipywidgets: 8.0.7
2023-07-07 10:13:59,834:INFO:                tqdm: 4.65.0
2023-07-07 10:13:59,834:INFO:               numpy: 1.22.4
2023-07-07 10:13:59,834:INFO:              pandas: 1.5.3
2023-07-07 10:13:59,834:INFO:              jinja2: 3.0.1
2023-07-07 10:13:59,834:INFO:               scipy: 1.7.1
2023-07-07 10:13:59,834:INFO:              joblib: 1.3.1
2023-07-07 10:13:59,834:INFO:             sklearn: 1.2.2
2023-07-07 10:13:59,834:INFO:                pyod: 1.1.0
2023-07-07 10:13:59,834:INFO:            imblearn: 0.10.1
2023-07-07 10:13:59,834:INFO:   category_encoders: 2.6.1
2023-07-07 10:13:59,834:INFO:            lightgbm: 3.3.5
2023-07-07 10:13:59,834:INFO:               numba: 0.57.1
2023-07-07 10:13:59,834:INFO:            requests: 2.31.0
2023-07-07 10:13:59,834:INFO:          matplotlib: 3.4.3
2023-07-07 10:13:59,834:INFO:          scikitplot: 0.3.7
2023-07-07 10:13:59,834:INFO:         yellowbrick: 1.5
2023-07-07 10:13:59,834:INFO:              plotly: 5.15.0
2023-07-07 10:13:59,834:INFO:    plotly-resampler: Not installed
2023-07-07 10:13:59,834:INFO:             kaleido: 0.2.1
2023-07-07 10:13:59,834:INFO:           schemdraw: 0.15
2023-07-07 10:13:59,834:INFO:         statsmodels: 0.14.0
2023-07-07 10:13:59,834:INFO:              sktime: 0.20.0
2023-07-07 10:13:59,834:INFO:               tbats: 1.1.3
2023-07-07 10:13:59,834:INFO:            pmdarima: 2.0.3
2023-07-07 10:13:59,835:INFO:              psutil: 5.9.5
2023-07-07 10:13:59,835:INFO:          markupsafe: 2.0.1
2023-07-07 10:13:59,835:INFO:             pickle5: Not installed
2023-07-07 10:13:59,835:INFO:         cloudpickle: 2.2.1
2023-07-07 10:13:59,835:INFO:         deprecation: 2.1.0
2023-07-07 10:13:59,835:INFO:              xxhash: 3.2.0
2023-07-07 10:13:59,835:INFO:           wurlitzer: 3.0.3
2023-07-07 10:13:59,835:INFO:PyCaret optional dependencies:
2023-07-07 10:13:59,835:INFO:                shap: Not installed
2023-07-07 10:13:59,835:INFO:           interpret: Not installed
2023-07-07 10:13:59,835:INFO:                umap: Not installed
2023-07-07 10:13:59,835:INFO:    pandas_profiling: 3.6.6
2023-07-07 10:13:59,835:INFO:  explainerdashboard: Not installed
2023-07-07 10:13:59,835:INFO:             autoviz: Not installed
2023-07-07 10:13:59,835:INFO:           fairlearn: Not installed
2023-07-07 10:13:59,835:INFO:          deepchecks: Not installed
2023-07-07 10:13:59,835:INFO:             xgboost: Not installed
2023-07-07 10:13:59,835:INFO:            catboost: Not installed
2023-07-07 10:13:59,835:INFO:              kmodes: Not installed
2023-07-07 10:13:59,835:INFO:             mlxtend: Not installed
2023-07-07 10:13:59,835:INFO:       statsforecast: Not installed
2023-07-07 10:13:59,835:INFO:        tune_sklearn: Not installed
2023-07-07 10:13:59,835:INFO:                 ray: Not installed
2023-07-07 10:13:59,835:INFO:            hyperopt: Not installed
2023-07-07 10:13:59,835:INFO:              optuna: Not installed
2023-07-07 10:13:59,835:INFO:               skopt: Not installed
2023-07-07 10:13:59,835:INFO:              mlflow: 2.4.1
2023-07-07 10:13:59,835:INFO:              gradio: Not installed
2023-07-07 10:13:59,835:INFO:             fastapi: Not installed
2023-07-07 10:13:59,835:INFO:             uvicorn: Not installed
2023-07-07 10:13:59,835:INFO:              m2cgen: Not installed
2023-07-07 10:13:59,835:INFO:           evidently: Not installed
2023-07-07 10:13:59,836:INFO:               fugue: Not installed
2023-07-07 10:13:59,836:INFO:           streamlit: Not installed
2023-07-07 10:13:59,836:INFO:             prophet: Not installed
2023-07-07 10:13:59,836:INFO:None
2023-07-07 10:13:59,836:INFO:Set up GPU usage.
2023-07-07 10:13:59,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:13:59,836:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-07-07 10:13:59,836:INFO:Set up data.
2023-07-07 10:14:00,672:INFO:Set up train/test split.
2023-07-07 10:14:00,904:INFO:Set up index.
2023-07-07 10:14:00,907:INFO:Set up folding strategy.
2023-07-07 10:14:00,907:INFO:Assigning column types.
2023-07-07 10:14:00,934:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-07 10:14:00,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:00,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:14:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:00,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:00,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:14:00,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-07 10:14:01,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:14:01,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,132:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-07 10:14:01,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:14:01,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-07-07 10:14:01,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,299:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-07-07 10:14:01,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,374:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,468:INFO:Preparing preprocessing pipeline...
2023-07-07 10:14:01,473:INFO:Set up simple imputation.
2023-07-07 10:14:01,473:INFO:Set up imbalanced handling.
2023-07-07 10:14:01,473:INFO:Set up feature normalization.
2023-07-07 10:14:01,473:INFO:Set up feature selection.
2023-07-07 10:14:01,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,533:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:01,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:01,550:INFO:Set up column name cleaning.
2023-07-07 10:14:07,233:INFO:Finished creating preprocessing pipeline.
2023-07-07 10:14:07,247:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:14:07,247:INFO:Creating final display dataframe.
2023-07-07 10:14:09,138:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target         Diabetes_binary
2                   Target type                  Binary
3           Original data shape            (198929, 32)
4        Transformed data shape             (290997, 6)
5   Transformed train set shape             (231318, 6)
6    Transformed test set shape              (59679, 6)
7               Ignore features                       4
8              Numeric features                       2
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                Fix imbalance                    True
14         Fix imbalance method                   SMOTE
15                    Normalize                    True
16             Normalize method                  zscore
17            Feature selection                    True
18     Feature selection method                 classic
19  Feature selection estimator                lightgbm
20  Number of features selected                     0.2
21               Fold Generator         StratifiedKFold
22                  Fold Number                      10
23                     CPU Jobs                      -1
24                      Use GPU                    True
25               Log Experiment            MlflowLogger
26              Experiment Name  Diabaties_detection_03
27                          USI                    6e29
2023-07-07 10:14:09,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,245:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,245:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,246:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:09,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:09,290:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-07 10:14:09,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:09,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-07 10:14:09,379:INFO:Logging experiment in loggers
2023-07-07 10:14:09,403:INFO:SubProcess save_model() called ==================================
2023-07-07 10:14:09,434:INFO:Initializing save_model()
2023-07-07 10:14:09,434:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=/tmp/tmpmhs4u0cw/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-07 10:14:09,434:INFO:Adding model into prep_pipe
2023-07-07 10:14:09,434:WARNING:Only Model saved as it was a pipeline.
2023-07-07 10:14:09,446:INFO:/tmp/tmpmhs4u0cw/Transformation Pipeline.pkl saved in current working directory
2023-07-07 10:14:09,463:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-07-07 10:14:09,463:INFO:save_model() successfully completed......................................
2023-07-07 10:14:09,626:INFO:SubProcess save_model() end ==================================
2023-07-07 10:14:09,631:INFO:setup() successfully completed in 9.6s...............
2023-07-07 10:14:15,427:INFO:Initializing compare_models()
2023-07-07 10:14:15,427:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, include=None, fold=10, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-07-07 10:14:15,427:INFO:Checking exceptions
2023-07-07 10:14:15,453:INFO:Preparing display monitor
2023-07-07 10:14:15,500:INFO:Initializing Logistic Regression
2023-07-07 10:14:15,500:INFO:Total runtime is 6.186962127685547e-06 minutes
2023-07-07 10:14:15,504:INFO:SubProcess create_model() called ==================================
2023-07-07 10:14:15,505:INFO:Initializing create_model()
2023-07-07 10:14:15,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:14:15,505:INFO:Checking exceptions
2023-07-07 10:14:15,505:INFO:Importing libraries
2023-07-07 10:14:15,505:INFO:Copying training dataset
2023-07-07 10:14:15,557:INFO:Defining folds
2023-07-07 10:14:15,558:INFO:Declaring metric variables
2023-07-07 10:14:15,562:INFO:Importing untrained model
2023-07-07 10:14:15,566:INFO:Logistic Regression Imported successfully
2023-07-07 10:14:15,579:INFO:Starting cross validation
2023-07-07 10:14:15,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:02,687:INFO:Calculating mean and std
2023-07-07 10:15:02,689:INFO:Creating metrics dataframe
2023-07-07 10:15:02,728:INFO:Uploading results into container
2023-07-07 10:15:02,728:INFO:Uploading model into container now
2023-07-07 10:15:02,729:INFO:_master_model_container: 1
2023-07-07 10:15:02,729:INFO:_display_container: 2
2023-07-07 10:15:02,730:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-07-07 10:15:02,730:INFO:create_model() successfully completed......................................
2023-07-07 10:15:02,846:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:02,846:INFO:Creating metrics dataframe
2023-07-07 10:15:02,857:INFO:Initializing K Neighbors Classifier
2023-07-07 10:15:02,857:INFO:Total runtime is 0.789287022749583 minutes
2023-07-07 10:15:02,861:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:02,862:INFO:Initializing create_model()
2023-07-07 10:15:02,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:02,862:INFO:Checking exceptions
2023-07-07 10:15:02,862:INFO:Importing libraries
2023-07-07 10:15:02,862:INFO:Copying training dataset
2023-07-07 10:15:02,911:INFO:Defining folds
2023-07-07 10:15:02,912:INFO:Declaring metric variables
2023-07-07 10:15:02,915:INFO:Importing untrained model
2023-07-07 10:15:02,920:INFO:K Neighbors Classifier Imported successfully
2023-07-07 10:15:02,929:INFO:Starting cross validation
2023-07-07 10:15:02,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:19,669:INFO:Calculating mean and std
2023-07-07 10:15:19,671:INFO:Creating metrics dataframe
2023-07-07 10:15:19,708:INFO:Uploading results into container
2023-07-07 10:15:19,709:INFO:Uploading model into container now
2023-07-07 10:15:19,709:INFO:_master_model_container: 2
2023-07-07 10:15:19,710:INFO:_display_container: 2
2023-07-07 10:15:19,710:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-07-07 10:15:19,710:INFO:create_model() successfully completed......................................
2023-07-07 10:15:19,821:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:19,821:INFO:Creating metrics dataframe
2023-07-07 10:15:19,832:INFO:Initializing Naive Bayes
2023-07-07 10:15:19,832:INFO:Total runtime is 1.0721999963124593 minutes
2023-07-07 10:15:19,836:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:19,836:INFO:Initializing create_model()
2023-07-07 10:15:19,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:19,836:INFO:Checking exceptions
2023-07-07 10:15:19,837:INFO:Importing libraries
2023-07-07 10:15:19,837:INFO:Copying training dataset
2023-07-07 10:15:19,880:INFO:Defining folds
2023-07-07 10:15:19,880:INFO:Declaring metric variables
2023-07-07 10:15:19,884:INFO:Importing untrained model
2023-07-07 10:15:19,889:INFO:Naive Bayes Imported successfully
2023-07-07 10:15:19,900:INFO:Starting cross validation
2023-07-07 10:15:19,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:23,607:INFO:Calculating mean and std
2023-07-07 10:15:23,608:INFO:Creating metrics dataframe
2023-07-07 10:15:23,641:INFO:Uploading results into container
2023-07-07 10:15:23,641:INFO:Uploading model into container now
2023-07-07 10:15:23,642:INFO:_master_model_container: 3
2023-07-07 10:15:23,642:INFO:_display_container: 2
2023-07-07 10:15:23,642:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-07-07 10:15:23,642:INFO:create_model() successfully completed......................................
2023-07-07 10:15:23,747:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:23,747:INFO:Creating metrics dataframe
2023-07-07 10:15:23,757:INFO:Initializing Decision Tree Classifier
2023-07-07 10:15:23,757:INFO:Total runtime is 1.1376200834910075 minutes
2023-07-07 10:15:23,760:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:23,761:INFO:Initializing create_model()
2023-07-07 10:15:23,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:23,761:INFO:Checking exceptions
2023-07-07 10:15:23,761:INFO:Importing libraries
2023-07-07 10:15:23,761:INFO:Copying training dataset
2023-07-07 10:15:23,803:INFO:Defining folds
2023-07-07 10:15:23,803:INFO:Declaring metric variables
2023-07-07 10:15:23,806:INFO:Importing untrained model
2023-07-07 10:15:23,811:INFO:Decision Tree Classifier Imported successfully
2023-07-07 10:15:23,821:INFO:Starting cross validation
2023-07-07 10:15:23,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:31,314:INFO:Calculating mean and std
2023-07-07 10:15:31,316:INFO:Creating metrics dataframe
2023-07-07 10:15:31,348:INFO:Uploading results into container
2023-07-07 10:15:31,349:INFO:Uploading model into container now
2023-07-07 10:15:31,349:INFO:_master_model_container: 4
2023-07-07 10:15:31,349:INFO:_display_container: 2
2023-07-07 10:15:31,350:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-07-07 10:15:31,350:INFO:create_model() successfully completed......................................
2023-07-07 10:15:31,454:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:31,454:INFO:Creating metrics dataframe
2023-07-07 10:15:31,464:INFO:Initializing SVM - Linear Kernel
2023-07-07 10:15:31,464:INFO:Total runtime is 1.2660754084587098 minutes
2023-07-07 10:15:31,468:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:31,468:INFO:Initializing create_model()
2023-07-07 10:15:31,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:31,468:INFO:Checking exceptions
2023-07-07 10:15:31,468:INFO:Importing libraries
2023-07-07 10:15:31,468:INFO:Copying training dataset
2023-07-07 10:15:31,508:INFO:Defining folds
2023-07-07 10:15:31,508:INFO:Declaring metric variables
2023-07-07 10:15:31,512:INFO:Importing untrained model
2023-07-07 10:15:31,517:INFO:SVM - Linear Kernel Imported successfully
2023-07-07 10:15:31,526:INFO:Starting cross validation
2023-07-07 10:15:31,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:38,182:INFO:Calculating mean and std
2023-07-07 10:15:38,184:INFO:Creating metrics dataframe
2023-07-07 10:15:38,224:INFO:Uploading results into container
2023-07-07 10:15:38,225:INFO:Uploading model into container now
2023-07-07 10:15:38,225:INFO:_master_model_container: 5
2023-07-07 10:15:38,225:INFO:_display_container: 2
2023-07-07 10:15:38,226:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-07-07 10:15:38,226:INFO:create_model() successfully completed......................................
2023-07-07 10:15:38,335:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:38,336:INFO:Creating metrics dataframe
2023-07-07 10:15:38,346:INFO:Initializing Ridge Classifier
2023-07-07 10:15:38,346:INFO:Total runtime is 1.3807706236839294 minutes
2023-07-07 10:15:38,349:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:38,350:INFO:Initializing create_model()
2023-07-07 10:15:38,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:38,350:INFO:Checking exceptions
2023-07-07 10:15:38,350:INFO:Importing libraries
2023-07-07 10:15:38,350:INFO:Copying training dataset
2023-07-07 10:15:38,399:INFO:Defining folds
2023-07-07 10:15:38,399:INFO:Declaring metric variables
2023-07-07 10:15:38,404:INFO:Importing untrained model
2023-07-07 10:15:38,409:INFO:Ridge Classifier Imported successfully
2023-07-07 10:15:38,420:INFO:Starting cross validation
2023-07-07 10:15:38,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:15:43,225:INFO:Calculating mean and std
2023-07-07 10:15:43,227:INFO:Creating metrics dataframe
2023-07-07 10:15:43,267:INFO:Uploading results into container
2023-07-07 10:15:43,268:INFO:Uploading model into container now
2023-07-07 10:15:43,268:INFO:_master_model_container: 6
2023-07-07 10:15:43,268:INFO:_display_container: 2
2023-07-07 10:15:43,268:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-07-07 10:15:43,268:INFO:create_model() successfully completed......................................
2023-07-07 10:15:43,374:INFO:SubProcess create_model() end ==================================
2023-07-07 10:15:43,374:INFO:Creating metrics dataframe
2023-07-07 10:15:43,384:INFO:Initializing Random Forest Classifier
2023-07-07 10:15:43,384:INFO:Total runtime is 1.4647446950276692 minutes
2023-07-07 10:15:43,388:INFO:SubProcess create_model() called ==================================
2023-07-07 10:15:43,388:INFO:Initializing create_model()
2023-07-07 10:15:43,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:15:43,388:INFO:Checking exceptions
2023-07-07 10:15:43,389:INFO:Importing libraries
2023-07-07 10:15:43,389:INFO:Copying training dataset
2023-07-07 10:15:43,439:INFO:Defining folds
2023-07-07 10:15:43,439:INFO:Declaring metric variables
2023-07-07 10:15:43,444:INFO:Importing untrained model
2023-07-07 10:15:43,449:INFO:Random Forest Classifier Imported successfully
2023-07-07 10:15:43,459:INFO:Starting cross validation
2023-07-07 10:15:43,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:16:46,697:INFO:Calculating mean and std
2023-07-07 10:16:46,698:INFO:Creating metrics dataframe
2023-07-07 10:16:46,720:INFO:Uploading results into container
2023-07-07 10:16:46,720:INFO:Uploading model into container now
2023-07-07 10:16:46,721:INFO:_master_model_container: 7
2023-07-07 10:16:46,721:INFO:_display_container: 2
2023-07-07 10:16:46,721:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-07-07 10:16:46,721:INFO:create_model() successfully completed......................................
2023-07-07 10:16:46,831:INFO:SubProcess create_model() end ==================================
2023-07-07 10:16:46,831:INFO:Creating metrics dataframe
2023-07-07 10:16:46,842:INFO:Initializing Quadratic Discriminant Analysis
2023-07-07 10:16:46,843:INFO:Total runtime is 2.5223793307940165 minutes
2023-07-07 10:16:46,846:INFO:SubProcess create_model() called ==================================
2023-07-07 10:16:46,847:INFO:Initializing create_model()
2023-07-07 10:16:46,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:16:46,847:INFO:Checking exceptions
2023-07-07 10:16:46,847:INFO:Importing libraries
2023-07-07 10:16:46,847:INFO:Copying training dataset
2023-07-07 10:16:46,893:INFO:Defining folds
2023-07-07 10:16:46,894:INFO:Declaring metric variables
2023-07-07 10:16:46,898:INFO:Importing untrained model
2023-07-07 10:16:46,903:INFO:Quadratic Discriminant Analysis Imported successfully
2023-07-07 10:16:46,913:INFO:Starting cross validation
2023-07-07 10:16:46,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:16:53,657:INFO:Calculating mean and std
2023-07-07 10:16:53,659:INFO:Creating metrics dataframe
2023-07-07 10:16:53,685:INFO:Uploading results into container
2023-07-07 10:16:53,686:INFO:Uploading model into container now
2023-07-07 10:16:53,687:INFO:_master_model_container: 8
2023-07-07 10:16:53,687:INFO:_display_container: 2
2023-07-07 10:16:53,687:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-07-07 10:16:53,687:INFO:create_model() successfully completed......................................
2023-07-07 10:16:53,798:INFO:SubProcess create_model() end ==================================
2023-07-07 10:16:53,799:INFO:Creating metrics dataframe
2023-07-07 10:16:53,811:INFO:Initializing Ada Boost Classifier
2023-07-07 10:16:53,811:INFO:Total runtime is 2.6385167161623637 minutes
2023-07-07 10:16:53,815:INFO:SubProcess create_model() called ==================================
2023-07-07 10:16:53,815:INFO:Initializing create_model()
2023-07-07 10:16:53,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:16:53,815:INFO:Checking exceptions
2023-07-07 10:16:53,815:INFO:Importing libraries
2023-07-07 10:16:53,816:INFO:Copying training dataset
2023-07-07 10:16:53,871:INFO:Defining folds
2023-07-07 10:16:53,871:INFO:Declaring metric variables
2023-07-07 10:16:53,875:INFO:Importing untrained model
2023-07-07 10:16:53,880:INFO:Ada Boost Classifier Imported successfully
2023-07-07 10:16:53,889:INFO:Starting cross validation
2023-07-07 10:16:53,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:17:41,459:INFO:Calculating mean and std
2023-07-07 10:17:41,461:INFO:Creating metrics dataframe
2023-07-07 10:17:41,492:INFO:Uploading results into container
2023-07-07 10:17:41,493:INFO:Uploading model into container now
2023-07-07 10:17:41,494:INFO:_master_model_container: 9
2023-07-07 10:17:41,494:INFO:_display_container: 2
2023-07-07 10:17:41,494:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-07-07 10:17:41,494:INFO:create_model() successfully completed......................................
2023-07-07 10:17:41,601:INFO:SubProcess create_model() end ==================================
2023-07-07 10:17:41,602:INFO:Creating metrics dataframe
2023-07-07 10:17:41,613:INFO:Initializing Gradient Boosting Classifier
2023-07-07 10:17:41,613:INFO:Total runtime is 3.43522797425588 minutes
2023-07-07 10:17:41,617:INFO:SubProcess create_model() called ==================================
2023-07-07 10:17:41,617:INFO:Initializing create_model()
2023-07-07 10:17:41,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:17:41,617:INFO:Checking exceptions
2023-07-07 10:17:41,617:INFO:Importing libraries
2023-07-07 10:17:41,617:INFO:Copying training dataset
2023-07-07 10:17:41,682:INFO:Defining folds
2023-07-07 10:17:41,683:INFO:Declaring metric variables
2023-07-07 10:17:41,688:INFO:Importing untrained model
2023-07-07 10:17:41,694:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:17:41,705:INFO:Starting cross validation
2023-07-07 10:17:41,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:20:09,743:INFO:Calculating mean and std
2023-07-07 10:20:09,745:INFO:Creating metrics dataframe
2023-07-07 10:20:09,769:INFO:Uploading results into container
2023-07-07 10:20:09,770:INFO:Uploading model into container now
2023-07-07 10:20:09,770:INFO:_master_model_container: 10
2023-07-07 10:20:09,771:INFO:_display_container: 2
2023-07-07 10:20:09,771:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:20:09,771:INFO:create_model() successfully completed......................................
2023-07-07 10:20:09,888:INFO:SubProcess create_model() end ==================================
2023-07-07 10:20:09,889:INFO:Creating metrics dataframe
2023-07-07 10:20:09,900:INFO:Initializing Linear Discriminant Analysis
2023-07-07 10:20:09,900:INFO:Total runtime is 5.906666421890259 minutes
2023-07-07 10:20:09,904:INFO:SubProcess create_model() called ==================================
2023-07-07 10:20:09,904:INFO:Initializing create_model()
2023-07-07 10:20:09,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:20:09,904:INFO:Checking exceptions
2023-07-07 10:20:09,904:INFO:Importing libraries
2023-07-07 10:20:09,905:INFO:Copying training dataset
2023-07-07 10:20:09,953:INFO:Defining folds
2023-07-07 10:20:09,953:INFO:Declaring metric variables
2023-07-07 10:20:09,958:INFO:Importing untrained model
2023-07-07 10:20:09,963:INFO:Linear Discriminant Analysis Imported successfully
2023-07-07 10:20:09,974:INFO:Starting cross validation
2023-07-07 10:20:09,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:20:17,185:INFO:Calculating mean and std
2023-07-07 10:20:17,187:INFO:Creating metrics dataframe
2023-07-07 10:20:17,218:INFO:Uploading results into container
2023-07-07 10:20:17,219:INFO:Uploading model into container now
2023-07-07 10:20:17,219:INFO:_master_model_container: 11
2023-07-07 10:20:17,219:INFO:_display_container: 2
2023-07-07 10:20:17,220:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-07-07 10:20:17,220:INFO:create_model() successfully completed......................................
2023-07-07 10:20:17,335:INFO:SubProcess create_model() end ==================================
2023-07-07 10:20:17,336:INFO:Creating metrics dataframe
2023-07-07 10:20:17,350:INFO:Initializing Extra Trees Classifier
2023-07-07 10:20:17,351:INFO:Total runtime is 6.030847656726838 minutes
2023-07-07 10:20:17,355:INFO:SubProcess create_model() called ==================================
2023-07-07 10:20:17,355:INFO:Initializing create_model()
2023-07-07 10:20:17,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:20:17,355:INFO:Checking exceptions
2023-07-07 10:20:17,355:INFO:Importing libraries
2023-07-07 10:20:17,355:INFO:Copying training dataset
2023-07-07 10:20:17,398:INFO:Defining folds
2023-07-07 10:20:17,398:INFO:Declaring metric variables
2023-07-07 10:20:17,402:INFO:Importing untrained model
2023-07-07 10:20:17,406:INFO:Extra Trees Classifier Imported successfully
2023-07-07 10:20:17,417:INFO:Starting cross validation
2023-07-07 10:20:17,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:21:49,955:INFO:Calculating mean and std
2023-07-07 10:21:50,005:INFO:Creating metrics dataframe
2023-07-07 10:21:50,019:INFO:Uploading results into container
2023-07-07 10:21:50,020:INFO:Uploading model into container now
2023-07-07 10:21:50,020:INFO:_master_model_container: 12
2023-07-07 10:21:50,020:INFO:_display_container: 2
2023-07-07 10:21:50,020:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-07-07 10:21:50,020:INFO:create_model() successfully completed......................................
2023-07-07 10:21:50,159:INFO:SubProcess create_model() end ==================================
2023-07-07 10:21:50,159:INFO:Creating metrics dataframe
2023-07-07 10:21:50,172:INFO:Initializing Light Gradient Boosting Machine
2023-07-07 10:21:50,172:INFO:Total runtime is 7.57786520322164 minutes
2023-07-07 10:21:50,175:INFO:SubProcess create_model() called ==================================
2023-07-07 10:21:50,175:INFO:Initializing create_model()
2023-07-07 10:21:50,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:21:50,175:INFO:Checking exceptions
2023-07-07 10:21:50,176:INFO:Importing libraries
2023-07-07 10:21:50,176:INFO:Copying training dataset
2023-07-07 10:21:50,220:INFO:Defining folds
2023-07-07 10:21:50,220:INFO:Declaring metric variables
2023-07-07 10:21:50,224:INFO:Importing untrained model
2023-07-07 10:21:50,229:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-07 10:21:50,239:INFO:Starting cross validation
2023-07-07 10:21:50,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:22:08,263:INFO:Calculating mean and std
2023-07-07 10:22:08,265:INFO:Creating metrics dataframe
2023-07-07 10:22:08,281:INFO:Uploading results into container
2023-07-07 10:22:08,282:INFO:Uploading model into container now
2023-07-07 10:22:08,282:INFO:_master_model_container: 13
2023-07-07 10:22:08,282:INFO:_display_container: 2
2023-07-07 10:22:08,283:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-07-07 10:22:08,283:INFO:create_model() successfully completed......................................
2023-07-07 10:22:08,389:INFO:SubProcess create_model() end ==================================
2023-07-07 10:22:08,389:INFO:Creating metrics dataframe
2023-07-07 10:22:08,402:INFO:Initializing Dummy Classifier
2023-07-07 10:22:08,402:INFO:Total runtime is 7.881704465548198 minutes
2023-07-07 10:22:08,406:INFO:SubProcess create_model() called ==================================
2023-07-07 10:22:08,406:INFO:Initializing create_model()
2023-07-07 10:22:08,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a13d73fa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:22:08,407:INFO:Checking exceptions
2023-07-07 10:22:08,407:INFO:Importing libraries
2023-07-07 10:22:08,407:INFO:Copying training dataset
2023-07-07 10:22:08,462:INFO:Defining folds
2023-07-07 10:22:08,462:INFO:Declaring metric variables
2023-07-07 10:22:08,469:INFO:Importing untrained model
2023-07-07 10:22:08,474:INFO:Dummy Classifier Imported successfully
2023-07-07 10:22:08,484:INFO:Starting cross validation
2023-07-07 10:22:08,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:22:11,841:INFO:Calculating mean and std
2023-07-07 10:22:11,843:INFO:Creating metrics dataframe
2023-07-07 10:22:11,860:INFO:Uploading results into container
2023-07-07 10:22:11,861:INFO:Uploading model into container now
2023-07-07 10:22:11,861:INFO:_master_model_container: 14
2023-07-07 10:22:11,861:INFO:_display_container: 2
2023-07-07 10:22:11,862:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-07-07 10:22:11,862:INFO:create_model() successfully completed......................................
2023-07-07 10:22:11,964:INFO:SubProcess create_model() end ==================================
2023-07-07 10:22:11,964:INFO:Creating metrics dataframe
2023-07-07 10:22:11,985:INFO:Initializing create_model()
2023-07-07 10:22:11,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:22:11,985:INFO:Checking exceptions
2023-07-07 10:22:11,988:INFO:Importing libraries
2023-07-07 10:22:11,989:INFO:Copying training dataset
2023-07-07 10:22:12,064:INFO:Defining folds
2023-07-07 10:22:12,064:INFO:Declaring metric variables
2023-07-07 10:22:12,064:INFO:Importing untrained model
2023-07-07 10:22:12,064:INFO:Declaring custom model
2023-07-07 10:22:12,065:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:22:12,073:INFO:Cross validation set to False
2023-07-07 10:22:12,073:INFO:Fitting Model
2023-07-07 10:22:31,819:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:22:31,819:INFO:create_model() successfully completed......................................
2023-07-07 10:22:31,930:INFO:Creating Dashboard logs
2023-07-07 10:22:31,936:INFO:Model: Gradient Boosting Classifier
2023-07-07 10:22:32,003:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:22:33,011:INFO:Initializing predict_model()
2023-07-07 10:22:33,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f19bc619ca0>)
2023-07-07 10:22:33,011:INFO:Checking exceptions
2023-07-07 10:22:33,011:INFO:Preloading libraries
2023-07-07 10:22:33,910:INFO:Creating Dashboard logs
2023-07-07 10:22:33,913:INFO:Model: Light Gradient Boosting Machine
2023-07-07 10:22:33,924:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-07-07 10:22:34,092:INFO:Creating Dashboard logs
2023-07-07 10:22:34,096:INFO:Model: Ada Boost Classifier
2023-07-07 10:22:34,106:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-07-07 10:22:34,275:INFO:Creating Dashboard logs
2023-07-07 10:22:34,278:INFO:Model: Logistic Regression
2023-07-07 10:22:34,289:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-07-07 10:22:34,467:INFO:Creating Dashboard logs
2023-07-07 10:22:34,470:INFO:Model: Linear Discriminant Analysis
2023-07-07 10:22:34,480:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-07-07 10:22:34,650:INFO:Creating Dashboard logs
2023-07-07 10:22:34,654:INFO:Model: Quadratic Discriminant Analysis
2023-07-07 10:22:34,665:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-07-07 10:22:34,834:INFO:Creating Dashboard logs
2023-07-07 10:22:34,837:INFO:Model: Naive Bayes
2023-07-07 10:22:34,849:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-07-07 10:22:35,040:INFO:Creating Dashboard logs
2023-07-07 10:22:35,044:INFO:Model: Random Forest Classifier
2023-07-07 10:22:35,057:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-07-07 10:22:35,242:INFO:Creating Dashboard logs
2023-07-07 10:22:35,246:INFO:Model: Extra Trees Classifier
2023-07-07 10:22:35,257:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-07-07 10:22:35,426:INFO:Creating Dashboard logs
2023-07-07 10:22:35,429:INFO:Model: K Neighbors Classifier
2023-07-07 10:22:35,440:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-07-07 10:22:35,605:INFO:Creating Dashboard logs
2023-07-07 10:22:35,608:INFO:Model: Decision Tree Classifier
2023-07-07 10:22:35,623:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-07-07 10:22:35,797:INFO:Creating Dashboard logs
2023-07-07 10:22:35,800:INFO:Model: Dummy Classifier
2023-07-07 10:22:35,811:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-07-07 10:22:35,966:INFO:Creating Dashboard logs
2023-07-07 10:22:35,969:INFO:Model: SVM - Linear Kernel
2023-07-07 10:22:35,980:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:22:36,142:INFO:Creating Dashboard logs
2023-07-07 10:22:36,146:INFO:Model: Ridge Classifier
2023-07-07 10:22:36,157:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-07-07 10:22:36,349:INFO:_master_model_container: 14
2023-07-07 10:22:36,349:INFO:_display_container: 2
2023-07-07 10:22:36,349:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:22:36,350:INFO:compare_models() successfully completed......................................
2023-07-07 10:31:34,458:INFO:Initializing create_model()
2023-07-07 10:31:34,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:31:34,459:INFO:Checking exceptions
2023-07-07 10:31:34,501:INFO:Importing libraries
2023-07-07 10:31:34,502:INFO:Copying training dataset
2023-07-07 10:31:34,578:INFO:Defining folds
2023-07-07 10:31:34,578:INFO:Declaring metric variables
2023-07-07 10:31:34,584:INFO:Importing untrained model
2023-07-07 10:31:34,590:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:31:34,603:INFO:Starting cross validation
2023-07-07 10:31:34,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:31:39,896:INFO:Calculating mean and std
2023-07-07 10:31:39,898:INFO:Creating metrics dataframe
2023-07-07 10:31:39,905:INFO:Finalizing model
2023-07-07 10:31:40,157:INFO:Creating Dashboard logs
2023-07-07 10:31:40,161:INFO:Model: Gradient Boosting Classifier
2023-07-07 10:31:40,173:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:31:40,249:INFO:Initializing predict_model()
2023-07-07 10:31:40,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f19bc619e50>)
2023-07-07 10:31:40,249:INFO:Checking exceptions
2023-07-07 10:31:40,249:INFO:Preloading libraries
2023-07-07 10:31:41,071:INFO:Uploading results into container
2023-07-07 10:31:41,074:INFO:Uploading model into container now
2023-07-07 10:31:41,114:INFO:_master_model_container: 15
2023-07-07 10:31:41,115:INFO:_display_container: 3
2023-07-07 10:31:41,118:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:31:41,118:INFO:create_model() successfully completed......................................
2023-07-07 10:31:57,903:INFO:Initializing plot_model()
2023-07-07 10:31:57,904:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:31:57,904:INFO:Checking exceptions
2023-07-07 10:31:57,923:INFO:Preloading libraries
2023-07-07 10:31:57,931:INFO:Copying training dataset
2023-07-07 10:31:57,932:INFO:Plot type: parameter
2023-07-07 10:31:57,938:INFO:Visual Rendered Successfully
2023-07-07 10:31:58,113:INFO:plot_model() successfully completed......................................
2023-07-07 10:32:09,799:INFO:Initializing plot_model()
2023-07-07 10:32:09,799:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:32:09,799:INFO:Checking exceptions
2023-07-07 10:32:09,822:INFO:Preloading libraries
2023-07-07 10:32:09,830:INFO:Copying training dataset
2023-07-07 10:32:09,831:INFO:Plot type: auc
2023-07-07 10:32:10,445:INFO:Fitting Model
2023-07-07 10:32:10,452:INFO:Scoring test/hold-out set
2023-07-07 10:32:10,703:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2023-07-07 10:32:10,703:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2023-07-07 10:32:10,708:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2023-07-07 10:32:10,708:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2023-07-07 10:32:10,715:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2023-07-07 10:32:10,715:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2023-07-07 10:32:10,940:INFO:Visual Rendered Successfully
2023-07-07 10:32:11,128:INFO:plot_model() successfully completed......................................
2023-07-07 10:32:24,889:INFO:Initializing plot_model()
2023-07-07 10:32:24,889:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:32:24,889:INFO:Checking exceptions
2023-07-07 10:32:24,911:INFO:Preloading libraries
2023-07-07 10:32:24,925:INFO:Copying training dataset
2023-07-07 10:32:24,925:INFO:Plot type: confusion_matrix
2023-07-07 10:32:25,135:INFO:Fitting Model
2023-07-07 10:32:25,139:INFO:Scoring test/hold-out set
2023-07-07 10:32:25,345:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2023-07-07 10:32:25,346:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2023-07-07 10:32:25,434:INFO:Visual Rendered Successfully
2023-07-07 10:32:25,548:INFO:plot_model() successfully completed......................................
2023-07-07 10:33:59,332:INFO:Initializing plot_model()
2023-07-07 10:33:59,332:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:33:59,333:INFO:Checking exceptions
2023-07-07 10:33:59,356:INFO:Preloading libraries
2023-07-07 10:33:59,363:INFO:Copying training dataset
2023-07-07 10:33:59,363:INFO:Plot type: feature
2023-07-07 10:33:59,365:WARNING:No coef_ found. Trying feature_importances_
2023-07-07 10:33:59,544:INFO:Visual Rendered Successfully
2023-07-07 10:33:59,681:INFO:plot_model() successfully completed......................................
2023-07-07 10:34:36,227:INFO:Initializing tune_model()
2023-07-07 10:34:36,227:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>)
2023-07-07 10:34:36,228:INFO:Checking exceptions
2023-07-07 10:34:36,277:INFO:Copying training dataset
2023-07-07 10:34:36,313:INFO:Checking base model
2023-07-07 10:34:36,313:INFO:Base model : Gradient Boosting Classifier
2023-07-07 10:34:36,317:INFO:Declaring metric variables
2023-07-07 10:34:36,322:INFO:Defining Hyperparameters
2023-07-07 10:34:36,457:INFO:Tuning with n_jobs=-1
2023-07-07 10:34:36,457:INFO:Initializing RandomizedSearchCV
2023-07-07 10:35:53,392:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:37:39,588:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:37:50,631:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:37:59,365:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:37:59,418:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:38:02,084:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:38:09,768:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:38:19,794:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:38:46,010:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:38:54,254:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:39:02,289:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:39:17,162:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:40:10,251:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:40:26,953:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:40:38,634:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:41:52,928:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:41:53,353:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:41:55,002:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:41:59,501:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:42:01,326:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:42:02,143:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.46s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:02,713:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:03,923:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:42:05,114:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:07,470:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:16,312:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:33,955:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:42:35,522:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:42:38,220:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:42:40,325:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:43:59,346:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:45:03,504:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:45:17,063:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:17,018:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:22,509:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:23,651:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:37,800:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:46,203:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:46:51,985:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:46:53,858:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:00,790:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:47:01,240:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-07-07 10:47:02,697:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:03,262:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:08,847:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:19,653:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:23,904:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:47:26,797:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:48:04,255:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:49:20,287:WARNING:/home/gops/miniconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-07 10:49:49,408:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.01}
2023-07-07 10:49:49,417:INFO:Hyperparameter search completed
2023-07-07 10:49:49,418:INFO:SubProcess create_model() called ==================================
2023-07-07 10:49:49,421:INFO:Initializing create_model()
2023-07-07 10:49:49,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1a240811c0>, model_only=True, return_train_score=False, kwargs={'subsample': 0.35, 'n_estimators': 140, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'learning_rate': 0.01})
2023-07-07 10:49:49,422:INFO:Checking exceptions
2023-07-07 10:49:49,423:INFO:Importing libraries
2023-07-07 10:49:49,423:INFO:Copying training dataset
2023-07-07 10:49:49,502:INFO:Defining folds
2023-07-07 10:49:49,502:INFO:Declaring metric variables
2023-07-07 10:49:49,510:INFO:Importing untrained model
2023-07-07 10:49:49,510:INFO:Declaring custom model
2023-07-07 10:49:49,520:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:49:49,533:INFO:Starting cross validation
2023-07-07 10:49:49,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:49:57,041:INFO:Calculating mean and std
2023-07-07 10:49:57,042:INFO:Creating metrics dataframe
2023-07-07 10:49:57,047:INFO:Finalizing model
2023-07-07 10:50:19,694:INFO:Uploading results into container
2023-07-07 10:50:19,695:INFO:Uploading model into container now
2023-07-07 10:50:19,698:INFO:_master_model_container: 16
2023-07-07 10:50:19,698:INFO:_display_container: 4
2023-07-07 10:50:19,699:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:50:19,700:INFO:create_model() successfully completed......................................
2023-07-07 10:50:19,984:INFO:SubProcess create_model() end ==================================
2023-07-07 10:50:19,984:INFO:choose_better activated
2023-07-07 10:50:19,989:INFO:SubProcess create_model() called ==================================
2023-07-07 10:50:19,990:INFO:Initializing create_model()
2023-07-07 10:50:19,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-07 10:50:19,991:INFO:Checking exceptions
2023-07-07 10:50:19,995:INFO:Importing libraries
2023-07-07 10:50:19,995:INFO:Copying training dataset
2023-07-07 10:50:20,049:INFO:Defining folds
2023-07-07 10:50:20,049:INFO:Declaring metric variables
2023-07-07 10:50:20,049:INFO:Importing untrained model
2023-07-07 10:50:20,050:INFO:Declaring custom model
2023-07-07 10:50:20,050:INFO:Gradient Boosting Classifier Imported successfully
2023-07-07 10:50:20,051:INFO:Starting cross validation
2023-07-07 10:50:20,071:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-07-07 10:50:26,345:INFO:Calculating mean and std
2023-07-07 10:50:26,346:INFO:Creating metrics dataframe
2023-07-07 10:50:26,348:INFO:Finalizing model
2023-07-07 10:50:27,191:INFO:Uploading results into container
2023-07-07 10:50:27,193:INFO:Uploading model into container now
2023-07-07 10:50:27,193:INFO:_master_model_container: 17
2023-07-07 10:50:27,193:INFO:_display_container: 5
2023-07-07 10:50:27,194:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:50:27,194:INFO:create_model() successfully completed......................................
2023-07-07 10:50:27,346:INFO:SubProcess create_model() end ==================================
2023-07-07 10:50:27,347:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.4449
2023-07-07 10:50:27,348:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.4491
2023-07-07 10:50:27,349:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2023-07-07 10:50:27,349:INFO:choose_better completed
2023-07-07 10:50:27,349:INFO:Creating Dashboard logs
2023-07-07 10:50:27,357:INFO:Model: Gradient Boosting Classifier
2023-07-07 10:50:27,396:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.01, 'loss': 'log_loss', 'max_depth': 7, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_samples_leaf': 2, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 140, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 0.35, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-07-07 10:50:27,473:INFO:Initializing predict_model()
2023-07-07 10:50:27,473:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f19b5f5a790>)
2023-07-07 10:50:27,473:INFO:Checking exceptions
2023-07-07 10:50:27,473:INFO:Preloading libraries
2023-07-07 10:50:29,164:INFO:_master_model_container: 17
2023-07-07 10:50:29,164:INFO:_display_container: 4
2023-07-07 10:50:29,165:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-07-07 10:50:29,165:INFO:tune_model() successfully completed......................................
2023-07-07 10:51:55,785:INFO:Initializing plot_model()
2023-07-07 10:51:55,785:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:51:55,785:INFO:Checking exceptions
2023-07-07 10:51:55,806:INFO:Preloading libraries
2023-07-07 10:51:55,819:INFO:Copying training dataset
2023-07-07 10:51:55,819:INFO:Plot type: feature
2023-07-07 10:51:55,820:WARNING:No coef_ found. Trying feature_importances_
2023-07-07 10:51:56,592:INFO:Visual Rendered Successfully
2023-07-07 10:51:56,730:INFO:plot_model() successfully completed......................................
2023-07-07 10:52:13,189:INFO:Initializing plot_model()
2023-07-07 10:52:13,190:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:52:13,190:INFO:Checking exceptions
2023-07-07 10:52:13,209:INFO:Preloading libraries
2023-07-07 10:52:13,219:INFO:Copying training dataset
2023-07-07 10:52:13,219:INFO:Plot type: confusion_matrix
2023-07-07 10:52:13,390:INFO:Fitting Model
2023-07-07 10:52:13,394:INFO:Scoring test/hold-out set
2023-07-07 10:52:14,134:INFO:Visual Rendered Successfully
2023-07-07 10:52:14,243:INFO:plot_model() successfully completed......................................
2023-07-07 10:52:32,281:INFO:Initializing plot_model()
2023-07-07 10:52:32,282:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:52:32,283:INFO:Checking exceptions
2023-07-07 10:52:32,339:INFO:Preloading libraries
2023-07-07 10:52:32,363:INFO:Copying training dataset
2023-07-07 10:52:32,363:INFO:Plot type: auc
2023-07-07 10:52:32,706:INFO:Fitting Model
2023-07-07 10:52:32,714:INFO:Scoring test/hold-out set
2023-07-07 10:52:33,903:INFO:Visual Rendered Successfully
2023-07-07 10:52:34,044:INFO:plot_model() successfully completed......................................
2023-07-07 10:53:39,657:INFO:Initializing evaluate_model()
2023-07-07 10:53:39,658:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-07-07 10:53:39,708:INFO:Initializing plot_model()
2023-07-07 10:53:39,709:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:53:39,709:INFO:Checking exceptions
2023-07-07 10:53:39,731:INFO:Preloading libraries
2023-07-07 10:53:39,749:INFO:Copying training dataset
2023-07-07 10:53:39,749:INFO:Plot type: pipeline
2023-07-07 10:53:40,155:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2023-07-07 10:53:40,155:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2023-07-07 10:53:40,231:INFO:Visual Rendered Successfully
2023-07-07 10:53:40,347:INFO:plot_model() successfully completed......................................
2023-07-07 10:53:45,730:INFO:Initializing plot_model()
2023-07-07 10:53:45,730:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 10:53:45,730:INFO:Checking exceptions
2023-07-07 10:53:45,747:INFO:Preloading libraries
2023-07-07 10:53:45,756:INFO:Copying training dataset
2023-07-07 10:53:45,756:INFO:Plot type: learning
2023-07-07 10:53:45,922:INFO:Fitting Model
2023-07-07 11:09:27,598:INFO:Visual Rendered Successfully
2023-07-07 11:09:27,725:INFO:plot_model() successfully completed......................................
2023-07-07 11:09:27,741:INFO:Initializing predict_model()
2023-07-07 11:09:27,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f19b67074c0>)
2023-07-07 11:09:27,742:INFO:Checking exceptions
2023-07-07 11:09:27,742:INFO:Preloading libraries
2023-07-07 11:09:28,668:INFO:Initializing plot_model()
2023-07-07 11:09:28,668:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, system=True)
2023-07-07 11:09:28,668:INFO:Checking exceptions
2023-07-07 11:09:28,686:INFO:Preloading libraries
2023-07-07 11:09:28,698:INFO:Copying training dataset
2023-07-07 11:09:28,698:INFO:Plot type: rfe
2023-07-07 11:09:28,881:INFO:Fitting Model
2023-07-07 11:43:55,662:INFO:Visual Rendered Successfully
2023-07-07 11:43:55,796:INFO:plot_model() successfully completed......................................
2023-07-07 11:43:55,801:INFO:Initializing predict_model()
2023-07-07 11:43:55,801:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f19bc619940>)
2023-07-07 11:43:55,801:INFO:Checking exceptions
2023-07-07 11:43:55,802:INFO:Preloading libraries
2023-07-07 11:43:55,805:INFO:Set up data.
2023-07-07 11:43:56,148:INFO:Set up index.
2023-07-07 11:51:34,046:INFO:Initializing save_model()
2023-07-07 11:51:34,047:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=diabaties_xbgc_tuned_070723, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         silent='warn',
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=5,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-07-07 11:51:34,047:INFO:Adding model into prep_pipe
2023-07-07 11:51:34,104:INFO:diabaties_xbgc_tuned_070723.pkl saved in current working directory
2023-07-07 11:51:34,119:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['BMI', 'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.01, loss='log_loss',
                                            max_depth=7, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=140,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.35,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-07-07 11:51:34,119:INFO:save_model() successfully completed......................................
2023-07-07 12:12:05,998:INFO:Initializing predict_model()
2023-07-07 12:12:05,998:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1a0c6b6c70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f1a0c451d30>)
2023-07-07 12:12:05,999:INFO:Checking exceptions
2023-07-07 12:12:05,999:INFO:Preloading libraries
2023-07-07 12:12:06,002:INFO:Set up data.
2023-07-07 12:12:06,997:INFO:Set up index.
